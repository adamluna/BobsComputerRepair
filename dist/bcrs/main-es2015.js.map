{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/app/pages/user-list/user-list.component.ts","./src/app/pages/user-list/user-list.component.html","./src/environments/environment.ts","./src/app/shared/user.service.ts","./src/app/shared/auth.guard.ts","./src/app/pages/user-create/user-create.component.ts","./src/app/pages/user-create/user-create.component.html","./src/app/pages/user-details/user-details.component.ts","./src/app/pages/user-details/user-details.component.html","./src/app/app.component.ts","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/app.module.ts","./src/app/shared/security-question.service.ts","./src/app/pages/security-question-details/security-question-details.component.ts","./src/app/pages/security-question-details/security-question-details.component.html","./src/app/shared/delete-record-dialog/delete-record-dialog.component.ts","./src/app/shared/delete-record-dialog/delete-record-dialog.component.html","./src/app/pages/security-question-list/security-question-list.component.ts","./src/app/pages/security-question-list/security-question-list.component.html","./src/app/pages/security-question-create/security-question-create.component.ts","./src/app/pages/security-question-create/security-question-create.component.html","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" class=\"main-welcome\">\r\n  <h1 class=\"title\">\r\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\r\n    <span class=\"subtitle\">\r\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\r\n    </span>\r\n  </h1>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-layout',\r\n  templateUrl: './auth-layout.component.html',\r\n  styleUrls: ['./auth-layout.component.css']\r\n})\r\nexport class AuthLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--\r\n============================================\r\n; Title:  auth-layout.component.html\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Auth layout component HTML file\r\n;===========================================\r\n-->\r\n<div fxLayout=\"column\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 19 Sep 2021\r\n * Title: user-list.component.ts\r\n*/\r\n\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteRecordDialogComponent } from './../../shared/delete-record-dialog/delete-record-dialog.component';\r\nimport { UserService } from './../../shared/user.service';\r\nimport {User} from './../../shared/user.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: User [];\r\n  displayedColumns = ['userName', 'firstName', 'lastName', 'phoneNumber', 'address', 'email', 'functions'];\r\n\r\n  constructor (private dialog: MatDialog, private userService: UserService){\r\n\r\n      this.userService.findAllUsers().subscribe(res => {\r\n          this.users = res['data'];\r\n          console.log(this.users);\r\n      }, err => {\r\n          console.log(err);\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void{\r\n\r\n  }\r\n\r\n  delete(userId, recordId): void {\r\n      const dialogRef = this.dialog.open(DeleteRecordDialogComponent,{\r\n          data: {\r\n              recordId,\r\n              dialogHeader: 'Delete Record Dialog',\r\n              dialogBody: `Are you sure you want to delete user ${recordId}?`\r\n          },\r\n          disableClose: true,\r\n          width: '800px'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result =>{\r\n          if (result === 'confirm') {\r\n              this.userService.deleteUser(userId).subscribe(res => {\r\n                  console.log(`User delete`);\r\n                  this.users = this.users.filter(u => u._id !== userId);\r\n              });\r\n          }\r\n      });\r\n  }\r\n}","<div fxLayout ='column'>\r\n    <mat-card>\r\n        <mat-card-title>Users Configuration</mat-card-title>\r\n        <mat-card-subtitle>\r\n            <button mat-button routerLink=\"/users/create/new\" color =\"accent\">Create</button>\r\n        </mat-card-subtitle>\r\n\r\n        <mat-card-content *ngIf=\"users\">\r\n            <table mat-table [dataSource]= \"user\">\r\n                <ng-container matColumnDef=\"userName\">\r\n                    <th mat-header-cell *matHeaderCellDef>Username</th>\r\n                    <td mat-cell *matCelLDef =\"let element\">\r\n                        {{ element.userName }} \r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"firstName\">\r\n                    <th mat-header-cell *matHeaderCellDef>First Name</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.firstName}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"lastName\">\r\n                    <th mat-header-cell *matHeaderCellDef>Last Name</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.lastName}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"phoneNumber\">\r\n                    <th mat-header-cell *matHeaderCellDef>Phone Name</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.phoneNumber}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"address\">\r\n                    <th mat-header-cell *matHeaderCellDef>Address</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.address}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef>Email</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.email}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"functions\">\r\n                    <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n                    <td mat-cell *matCellDef = \"let element\">\r\n                        <button mat-icon-button routerLink=\"/users/{{element._id}}\">\r\n                        <mat-icon color=\"accent\">delete</mat-icon>\r\n                        </button>                 \r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef = \"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/*\r\n============================================\r\n; Title: user.service.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 19 September 2021\r\n; Description: User service TypeScript file\r\n;===========================================\r\n*/\r\n\r\n// import statements\r\nimport { Injectable } from \"@angular/core\";\r\nimport { User } from \"./user.interface\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  findAllUsers(): Observable<any> {\r\n    return this.http.get(\"/api/users\");\r\n  }\r\n\r\n  findUserById(userId: string): Observable<any> {\r\n    return this.http.get(\"/api/users/\" + userId);\r\n  }\r\n\r\n  createUser(user: User): Observable<any> {\r\n    return this.http.post(\"/api/users/\", {\r\n      userName: user.userName,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      email: user.email,\r\n    });\r\n  }\r\n\r\n  updateUser(userId: string, user: User): Observable<any> {\r\n    return this.http.put(\"/api/users/\" + userId, {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      email: user.email,\r\n    });\r\n  }\r\n\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.http.delete(\"/api/users/\" + userId);\r\n  }\r\n}\r\n","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 17 Sep 2021\r\n * Title: auth.guard.ts\r\n*/\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n  export class AuthGuard implements CanActivate {\r\n      constructor( private router: Router, private cookieService: CookieService){}\r\n\r\n      canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n          const isAuthenticated = this.cookieService.get('sessionuser');\r\n\r\n          if (isAuthenticated) {\r\n              return true;\r\n          } else {\r\n              this.router.navigate(['/session/signin']);\r\n              return false;\r\n          }\r\n      }\r\n  }","/*\r\n============================================\r\n; Title: user-create.component.ts\r\n; Author: Adam Luna\r\n; Date: 19 September 2021\r\n; Description: User create component TypeScript file\r\n;===========================================\r\n*/\r\n// import statements\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"./../../shared/user.interface\";\r\nimport { UserService } from \"./../../shared/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-user-create\",\r\n  templateUrl: \"./user-create.component.html\",\r\n  styleUrls: [\"./user-create.component.css\"],\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  user: User;\r\n  userId: string;\r\n  form: FormGroup;\r\n  roles: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])],\r\n      password: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\r\n        ]),\r\n      ],\r\n      firstName: [null, Validators.compose([Validators.required])],\r\n      lastName: [null, Validators.compose([Validators.required])],\r\n      phoneNumber: [null, Validators.compose([Validators.required])],\r\n      address: [null, Validators.compose([Validators.required])],\r\n      email: [\r\n        null,\r\n        Validators.compose([Validators.required, Validators.email]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  createUser(): void {\r\n    const newUser: User = {\r\n      userName: this.form.controls.userName.value,\r\n      password: this.form.controls.password.value,\r\n      firstName: this.form.controls.firstName.value,\r\n      lastName: this.form.controls.lastName.value,\r\n      phoneNumber: this.form.controls.phoneNumber.value,\r\n      address: this.form.controls.address.value,\r\n      email: this.form.controls.address.value,\r\n    };\r\n\r\n    this.userService.createUser(newUser).subscribe(\r\n      (res) => {\r\n        this.router.navigate([\"/users\"]);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"/users\"]);\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n\r\n      <mat-card-title>Create User</mat-card-title>\r\n\r\n      <br />\r\n\r\n      <!-- create user form -->\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"createUser()\" #userForm (keydown.enter)=\"$event.preventDefault()\">\r\n        <mat-card-content>\r\n          <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n            <!-- username field -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [formControl]=\"form.controls['userName']\" placeholder=\"username\">\r\n  \r\n              <mat-error class=\"error\" *ngIf=\"form.controls.userName.hasError('required') && form.controls.userName.touched\">\r\n                Username is a required field.\r\n              </mat-error>\r\n            </mat-form-field>\r\n  \r\n            <!-- password field -->\r\n            <mat-form-field>\r\n              <input type=\"password\" matInput [formControl]=\"form.controls['password']\" placeholder=\"password\">\r\n  \r\n              <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('required') && form.controls.password.touched\">\r\n                Password is a required field.\r\n              </mat-error>\r\n  \r\n              <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('pattern') && form.controls.password.touched\">\r\n                Password must be at least 8 characters, contain one letter, and\r\n                one number.\r\n              </mat-error>\r\n            </mat-form-field>\r\n  \r\n            <!-- first name field -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\" placeholder=\"first name\">\r\n              <mat-error class=\"error\" *ngIf=\"form.controls.firstName.hasError('required') && form.controls.firstName.touched\">\r\n                First name is a required field.\r\n              </mat-error>\r\n            </mat-form-field>\r\n  \r\n            <!-- last name field -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\" placeholder=\"last name\">\r\n              <mat-error class=\"error\" *ngIf=\"form.controls.lastName.hasError('required') && form.controls.lastName.touched\">\r\n                Last name is a required field.\r\n              </mat-error>\r\n            </mat-form-field>\r\n  \r\n            <!-- phone number field -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\" placeholder=\"phone number\">\r\n              <mat-error class=\"error\" *ngIf=\"form.controls.phoneNumber.hasError('required') && form.controls.phoneNumber.touched\">\r\n                Phone number is a required field.\r\n              </mat-error>\r\n            </mat-form-field>\r\n  \r\n            <!-- address field -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [formControl]=\"form.controls['address']\" placeholder=\"address\">\r\n              <mat-error class=\"error\" *ngIf=\"form.controls.address.hasError('required') && form.controls.address.touched\">\r\n                Address is a required field.\r\n              </mat-error>\r\n            </mat-form-field>\r\n  \r\n            <!-- email field -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [formControl]=\"form.controls['email']\" placeholder=\"email\">\r\n              <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('required') && form.controls.email.touched\">\r\n                Email is a required field.\r\n              </mat-error>\r\n  \r\n              <mat-error class=\"error\" *ngIf=\" form.controls.email.hasError('email') && form.controls.email.touched\">\r\n                Invalid email format.\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n        <br />\r\n\r\n        <!-- buttons -->\r\n        <mat-card-actions fxLayoutAlign=\"end\">\r\n          <!-- cancel -->\r\n          <button mat-raised-button (click)=\"cancel()\">\r\n            Cancel\r\n          </button>\r\n\r\n          <!-- submit -->\r\n          <button mat-raised-button [disabled]=\"!form.valid\" color=\"secondary\">\r\n            Submit\r\n          </button>\r\n        </mat-card-actions>\r\n      </form>\r\n    </mat-card>\r\n  </div>","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 19 Sep 2021\r\n * Title: user-details.component.ts\r\n*/\r\n\r\n//import statements\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../shared/user.service';\r\nimport { User } from './../../shared/user.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  user: User;\r\n  userId: string;\r\n  form: FormGroup;\r\n  roles: any;\r\n  constructor(private route: ActivatedRoute, private fb:FormBuilder, private router: Router,\r\n    private userService: UserService){\r\n        this.userId = this.route.snapshot.paramMap.get('userId');\r\n\r\n        this.userService.findUserById(this.userId).subscribe(res =>{\r\n            this.user = res['data'];\r\n        }, err => {\r\n            console.log(err);\r\n        }, () => {\r\n            this.form.controls.firstName.setValue(this.user.firstName);\r\n            this.form.controls.lastName.setValue(this.user.lastName);\r\n            this.form.controls.phoneNumber.setValue(this.user.phoneNumber);\r\n            this.form.controls.address.setValue(this.user.address);\r\n            this.form.controls.email.setValue(this.user.email);\r\n        });\r\n    }\r\n\r\n    //ensure field is filled in\r\n    ngOnInit(): void{\r\n        this.form = this.fb.group({\r\n            firstName: [null, Validators.compose([Validators.required])],\r\n            lastName: [null, Validators.compose([Validators.required])],\r\n            phoneNumber: [null, Validators.compose([Validators.required])],\r\n            address: [null, Validators.compose([Validators.required])],\r\n            email: [null, Validators.compose([Validators.required])],\r\n        });\r\n    }\r\n\r\n    //updates form values\r\n    saveUser(): void{\r\n        const updatedUser: User ={\r\n            firstName: this.form.controls.firstName.value,\r\n            lastName: this.form.controls.lastName.value,\r\n            phoneNumber: this.form.controls.phoneNumber.value,\r\n            address: this.form.controls.address.value,\r\n            email: this.form.controls.email.value\r\n        };\r\n\r\n        this.userService.updateUser(this.userId, updatedUser).subscribe(res => {\r\n            this.router.navigate(['/users']);\r\n        }, err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    //cancel option. brings user back to user page\r\n    cancel(): void{\r\n        this.router.navigate(['/users']);\r\n    }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-card-title>User Details</mat-card-title>\r\n\r\n        <br/>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveUser()\" #userForm (keydown.enter)= \"$event.preventDefault()\">\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\"\r\n                        placeholder=\"First name\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.firstName.hasError('required') && form.controls.firstName.touched\">\r\n                            First name is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\"\r\n                        placeholder=\"Last name\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.lastName.hasError('required') && form.controls.lastName.touched\">\r\n                            Last name is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\"\r\n                        placeholder=\"Phone number\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.phoneNumber.hasError('required') && form.controls.phoneNumber.touched\">\r\n                            Phone number is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['address']\"\r\n                        placeholder=\"Address\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.address.hasError('required') && form.controls.address.touched\">\r\n                            Address is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['email']\"\r\n                        placeholder=\"Email\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('required') && form.controls.email.touched\">\r\n                            Email is a required field.\r\n                        </mat-error>\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('email') && form.controls.email.touched\">\r\n                            Invalid email format.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                </mat-card-content>\r\n\r\n                <br/>\r\n\r\n                <mat-card-actions align=\"end\">\r\n                    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n                    <button mat-raised-button [disabled]=\"!form.valid\" color = \"accent\">Submit</button>\r\n                </mat-card-actions>\r\n        </form>\r\n    </mat-card>\r\n</div>\r\n                ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`,\r\n  styles: [``]\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n","/*\r\n============================================\r\n; Title: signin-component.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Signin component TypeScript file\r\n;===========================================\r\n*/\r\n// import statements\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.css\"],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private cookieService: CookieService,\r\n    private fb: FormBuilder,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])],\r\n      password: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  signin(): void {\r\n    const userName = this.form.controls.userName.value;\r\n    const password = this.form.controls.password.value;\r\n\r\n    this.http\r\n      .post(\"/api/session/signin\", {\r\n        userName,\r\n        password,\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res[\"data\"]);\r\n          if (res[\"data\"].userName) {\r\n            /**\r\n             * User is authenticated and we can grant them access\r\n             */\r\n            this.cookieService.set(\"sessionuser\", res[\"data\"].userName, 1);\r\n            this.router.navigate([\"/\"]);\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.errorMessage = err.error.message;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row>\r\n        <div style=\"width: 90%;\">\r\n            <p style=\"text-align: center; padding-left: 10%; font-weight: lighter;\">\r\n            Bob's Computer Repair Shop <br />\r\n            <mat-icon>build</mat-icon>\r\n            </p>\r\n        </div>\r\n    </mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n</mat-toolbar>\r\n    \r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n    <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n        <mat-card class=\"mat-card-top pa-0\">\r\n            <mat-card-title style=\"text-align: center; font-size: 48px; font-weight: lighter;\"\r\n                    class=\"mat-headline\">Employee Sign In\r\n            </mat-card-title>\r\n\r\n            <br />\r\n\r\n            <mat-card-subtitle style=\"text-align: center; font-weight: lighter;\">\r\n                <a routerLink=\"/\" class=\"register-link\">or create an account</a>\r\n            </mat-card-subtitle>\r\n\r\n            <br />\r\n\r\n            <mat-card-subtitle style=\"text-align: center;\" class=\"mat-headline\">\r\n                You must enter a valid username/password to proceed\r\n            </mat-card-subtitle>\r\n\r\n            <mat-card-content>\r\n                <!-- for any error message-->\r\n                <small style=\"color: #c51d36;\" *ngIf=\"errorMessage\">{{ errorMessage }}<br/></small>\r\n                <mat-card class=\"mat-elevation-z0\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"signin(); form.reset()\" #loginForm=\"ngForm\">\r\n                        <mat-card-content fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                            <mat-form-field>\r\n                                <input type=\"text\" matInput fxFlex [formControl]=\"form.controls['userName']\"\r\n                                    placeholder=\"User Name\"/>\r\n\r\n                                    <mat-error class=\"error\" *ngIf=\"form.controls.userName.hasError('required') && form.controls.userName.touched\">\r\n                                        Username is a required field.\r\n                                    </mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field>\r\n                                <input type=\"password\" matInput fxFlex [formControl]=\"form.controls['password']\"\r\n                                    placeholder=\"Password\"/>\r\n                                <!--error prompts at the form fill-->\r\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('required') && form.controls.password.touched\">\r\n                                    Password is a required field.\r\n                                </mat-error>\r\n\r\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('pattern') && form.controls.password.touched\">\r\n                                    Password must be at least 8 characters, contain one letter, and one number.\r\n                                </mat-error>\r\n\r\n                            </mat-form-field>\r\n                        </mat-card-content>\r\n\r\n                        <mat-card-actions>\r\n                            <button type=\"submit\" [disabled]=\"!form.valid\" fxFlex mat-raised-button color=\"accent\">Submit</button>\r\n                        </mat-card-actions>\r\n                        <br/>\r\n                        <a fxLayoutAlign=\"end\" class=\"forgot-password-link\" routerLink=\"/\">Forgot password?</a>\r\n                    </form>\r\n                </mat-card>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","/**\r\n * Author: Prof. Richard Krasso\r\n * Modified By: Eunice Lim, Adam Luna, Mark Watson\r\n * Date: 18 Sept 2021\r\n * Title: app.module.ts\r\n */\r\n\r\n\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\r\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DeleteRecordDialogComponent } from './shared/delete-record-dialog/delete-record-dialog.component';\r\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\r\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { UserListComponent } from './pages/user-list/user-list.component';\r\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\r\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\r\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    BaseLayoutComponent,\r\n    AuthLayoutComponent,\r\n    DeleteRecordDialogComponent,\r\n    SecurityQuestionDetailsComponent,\r\n    SecurityQuestionListComponent,\r\n    SigninComponent,\r\n    UserListComponent,\r\n    SecurityQuestionCreateComponent,\r\n    UserCreateComponent,\r\n    UserDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/**\r\n * Date: 18 September 2021\r\n * Title: BCRS - Security Question Service\r\n * Author: Mark Watson\r\n * Description: Security question service file.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { SecurityQuestion } from './security-question.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SecurityQuestionService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // findAll\r\n  findAllSecurityQuestions(): Observable<any> {\r\n    return this.http.get('/api/security-questions');\r\n  }\r\n\r\n  // findById\r\n  findSecurityQuestionById(questionId: string): Observable<any> {\r\n    return this.http.get('/api/security-questions/' + questionId);\r\n  }\r\n\r\n  // create\r\n  createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\r\n    return this.http.post('/api/security-questions', {\r\n      text: newSecurityQuestion.text\r\n    })\r\n  }\r\n\r\n  // update\r\n  updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\r\n    return this.http.put('/api/security-questions/'+ questionId, {\r\n      text: updatedSecurityQuestion.text\r\n    })\r\n  }\r\n\r\n  // delete\r\n  deleteSecurityQuestion(questionId: string): Observable<any> {\r\n    return this.http.delete('/api/security-questions/'+ questionId);\r\n  }\r\n}\r\n","/*\r\n============================================\r\n; Title: security-question-details.component.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Security question details component TypeScript file\r\n;===========================================\r\n*/\r\n\r\n// import statements\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\r\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\r\n\r\n@Component({\r\n  selector: \"app-security-question-details\",\r\n  templateUrl: \"./security-question-details.component.html\",\r\n  styleUrls: [\"./security-question-details.component.css\"],\r\n})\r\nexport class SecurityQuestionDetailsComponent implements OnInit {\r\n  question: SecurityQuestion;\r\n  questionId: string;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private securityQuestionService: SecurityQuestionService\r\n  ) {\r\n    this.questionId = this.route.snapshot.paramMap.get(\"questionId\");\r\n\r\n    this.securityQuestionService\r\n      .findSecurityQuestionById(this.questionId)\r\n      .subscribe(\r\n        (res) => {\r\n          this.question = res[\"data\"];\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          this.form.controls.text.setValue(this.question.text);\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  saveQuestion(): void {\r\n    const updatedSecurityQuestion: SecurityQuestion = {\r\n      text: this.form.controls.text.value,\r\n    };\r\n\r\n    this.securityQuestionService\r\n      .updateSecurityQuestion(this.questionId, updatedSecurityQuestion)\r\n      .subscribe((res) => {\r\n        this.router.navigate([\"/security-questions\"]);\r\n      });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"/security-questions\"]);\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-card-title>Security Question Details</mat-card-title>\r\n\r\n        <br />\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveQuestion()\" #questionForm>\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input matInput [formControl]=\"form.controls['text']\"\r\n                        placeholder=\"Security question text...\" (keydown.enter)=\"saveQuestion()\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.text.hasError('required') && form.controls.text.touched\">\r\n                            Security question is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <br />\r\n            <mat-card-actions  align=\"end\">\r\n                <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n                <button mat-raised button [disabled]=\"!form.valid\" color=\"accent\">Submit</button>\r\n            </mat-card-actions>\r\n        </form>\r\n\r\n    </mat-card>\r\n</div>","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 17 Sep 2021\r\n * Title: delete-record-dialog.component.ts\r\n*/\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-record-dialog',\r\n  templateUrl: './delete-record-dialog.component.html',\r\n  styleUrls: ['./delete-record-dialog.component.css']\r\n})\r\nexport class DeleteRecordDialogComponent implements OnInit {\r\n  recordId: string;\r\n  dialogHeader: string;\r\n  dialogBody: string;\r\n  \r\n  /** to delete the current record via the id, header and body */\r\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\r\n    this.recordId = data.recordId;\r\n    this.dialogHeader = data.dialogHeader;\r\n    this.dialogBody = data.dialogBody; \r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- delete confirmation pop up -->\r\n<h2 mat-dialog-title>{{ dialogHeader }}</h2>\r\n\r\n<div mat-dialog-content>\r\n  <p>{{ dialogBody }}</p>\r\n  <small style=\"color: red\">WARNING: Deleted records cannot be recovered.</small>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button matDialogClose=\"cancel\">\r\n    No Thanks\r\n  </button>\r\n  <button mat-raised-button matDialogClose=\"confirm\" cdkFocusInitial>\r\n    Accept\r\n  </button>\r\n</div>","/*\r\n============================================\r\n; Title: security-question-list.component.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Security question list component TypeScript file\r\n;===========================================\r\n*/\r\n\r\n// import statements\r\nimport { DeleteRecordDialogComponent } from \"./../../shared/delete-record-dialog/delete-record-dialog.component\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\r\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\r\n\r\n@Component({\r\n  selector: \"app-security-question-list\",\r\n  templateUrl: \"./security-question-list.component.html\",\r\n  styleUrls: [\"./security-question-list.component.css\"],\r\n})\r\nexport class SecurityQuestionListComponent implements OnInit {\r\n  securityQuestions: SecurityQuestion[];\r\n  displayColumns = [\"question\", \"functions\"];\r\n\r\n  constructor(private dialog: MatDialog, private securityQuestionService: SecurityQuestionService) {\r\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\r\n      (res) => {\r\n        this.securityQuestions = res[\"data\"];\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  delete(recordId: string): void {\r\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\r\n      data: {\r\n        recordId,\r\n        dialogHeader: \"Delete Record Dialog\",\r\n        dialogBody: `Are you sure you want to delete the selected security question?`,\r\n      },\r\n      disableClose: true,\r\n      width: \"800px\",\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === \"confirm\") {\r\n        this.securityQuestionService\r\n          .deleteSecurityQuestion(recordId)\r\n          .subscribe((res) => {\r\n            console.log(\"Security question deleted\");\r\n            this.securityQuestions = this.securityQuestions.filter(\r\n              q => q._id !== recordId);\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card>\r\n        <mat-card-title>Security Questions Configuration</mat-card-title>\r\n        <mat-card-subtitle>\r\n            <button mat-button routerLink=\"/security-questions/create/new\" color=\"accent\">Create</button>\r\n        </mat-card-subtitle>\r\n\r\n        <br />\r\n        <mat-card-content *ngIf=\"securityQuestions\">\r\n            <table mat-table [dataSource]=\"securityQuestions\">\r\n                <ng-container matColumnDef=\"question\">\r\n                    <th mat-header-cell *matHeaderCellDef>Question</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.text }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"functions\">\r\n                <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button routerLink=\"/security-questions/{{element._id}}\">\r\n                    <mat-icon color=\"accent\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button (click)=\"delete(element._id)\">\r\n                        <mat-icon color=\"accent\">delete</mat-icon>\r\n                    </button>\r\n                </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","/**\r\n * Date: 18 September 2021\r\n * Title: BCRS - Security Question Create\r\n * Author: Mark Watson, Adam Luna\r\n * Description: Security question create component.\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SecurityQuestionService } from './../../shared/security-question.service';\r\nimport { SecurityQuestion } from './../../shared/security-question.interface';\r\n\r\n@Component({\r\n  selector: 'app-security-question-create',\r\n  templateUrl: './security-question-create.component.html',\r\n  styleUrls: ['./security-question-create.component.css']\r\n})\r\n\r\nexport class SecurityQuestionCreateComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private securityQuestionService: SecurityQuestionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  // create security question from input on the form\r\n  create(): void {\r\n    const newSecurityQuestion: SecurityQuestion = {\r\n      text: this.form.controls.text.value\r\n    }\r\n\r\n    this.securityQuestionService.createSecurityQuestion(newSecurityQuestion).subscribe(res => {\r\n      this.router.navigate(['/security-questions']);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // to cancel\r\n  cancel(): void {\r\n    this.router.navigate(['/security-questions']);\r\n  }\r\n}\r\n","<!--\r\n============================================\r\n; Title:  security-question-create.component.html\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: HTML file for the create security question page\r\n;===========================================\r\n-->\r\n\r\n<div fxLayout=\"column\">\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-card-title>Create Security Question</mat-card-title>\r\n\r\n    <br />\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"create()\" #securityQuestionform>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n          <mat-form-field>\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              [formControl]=\"form.controls['text']\"\r\n              placeholder=\"Question text\"\r\n              (keydown.enter)=\"create()\"\r\n            />\r\n\r\n            <mat-error\r\n              *ngIf=\"\r\n                form.controls.text.hasError('required') &&\r\n                form.controls.text.touched\r\n              \"\r\n              class=\"error\"\r\n            >\r\n              Security questions is a required field.\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <br />\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          [disabled]=\"!form.valid\"\r\n          mat-raised-button\r\n          color=\"accent\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-base-layout',\r\n  templateUrl: './base-layout.component.html',\r\n  styleUrls: ['./base-layout.component.css']\r\n})\r\nexport class BaseLayoutComponent implements OnInit {\r\n\r\n  year: number = Date.now();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n\r\n  <!-- navigation -->\r\n  <nav fxFlex>\r\n    <mat-toolbar class=\"hp-background\">\r\n      <!-- navbar container -->\r\n      <div class=\"navbar-container\">\r\n        <!-- logo -->\r\n        <button class=\"logo\" routerLink=\"/\" mat-button>BCRS</button>\r\n\r\n        <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\r\n        <button class=\"navbar-link\" mat-button>About</button>\r\n      </div>\r\n\r\n    </mat-toolbar>\r\n  </nav>\r\n\r\n  <!-- main content -->\r\n  <div fxFlex>\r\n    <main class=\"main-content\" fxFlex=\"100%;\">\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n  </div>\r\n\r\n  <!-- footer -->\r\n  <div fxFlex>\r\n    <footer class=\"footer\">\r\n      <mat-toolbar class=\"hp-background-2 hp-tertiary footer-content\">\r\n        <p>\r\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop - <a href=\"https://www.bellevue.edu/\" class=\"hp-primary bu-link\" target=\"_blank\">Bellevue University</a> - <a href=\"https://github.com/adamluna/BobsComputerRepair\" class=\"hp-primary bu-link\" target=\"_blank\">Team Hufflepuff</a> \r\n        </p>\r\n        <div style=\"margin-left: auto\">\r\n          <a href=\"https://www.bellevue.edu/\" class=\"hp-primary bu-link\" target=\"_blank\"><img class=\"crest\" src=\"./assets/hufflepuff-crest.png\"></a>\r\n        </div>\r\n      </mat-toolbar>\r\n    </footer>\r\n  </div>\r\n</div>","/**\r\n * Date: 18 September 2021\r\n * Title: BCRS - App Routing\r\n * Author: Mark Watson\r\n * Description: App routing file.\r\n */\r\n\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\r\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { UserListComponent } from './pages/user-list/user-list.component';\r\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\r\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\r\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\r\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\r\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\r\nimport { AuthGuard } from './shared/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: HomeComponent\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: UserListComponent,\r\n      },\r\n      {\r\n        path: 'users/:userId',\r\n        component: UserDetailsComponent,\r\n      },\r\n      {\r\n        path: 'users/create/new',\r\n        component: UserCreateComponent,\r\n      },\r\n      {\r\n        path: 'security-questions',\r\n        component: SecurityQuestionListComponent,\r\n      },\r\n      {\r\n        path: 'security-questions/:id',\r\n        component: SecurityQuestionDetailsComponent,\r\n      },\r\n      {\r\n        path: 'security-questions/create/new',\r\n        component: SecurityQuestionCreateComponent\r\n      }\r\n    ],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'session',\r\n    component: AuthLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'signin',\r\n        component: SigninComponent,\r\n      },\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}