{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/app/pages/user-list/user-list.component.ts","./src/app/pages/user-list/user-list.component.html","./src/environments/environment.ts","./src/app/shared/user.service.ts","./src/app/shared/auth.guard.ts","./src/app/pages/user-create/user-create.component.ts","./src/app/pages/user-create/user-create.component.html","./src/app/pages/user-details/user-details.component.ts","./src/app/pages/user-details/user-details.component.html","./src/app/app.component.ts","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/app.module.ts","./src/app/shared/security-question.service.ts","./src/app/pages/security-question-details/security-question-details.component.ts","./src/app/pages/security-question-details/security-question-details.component.html","./src/app/shared/delete-record-dialog/delete-record-dialog.component.ts","./src/app/shared/delete-record-dialog/delete-record-dialog.component.html","./src/app/pages/security-question-list/security-question-list.component.ts","./src/app/pages/security-question-list/security-question-list.component.html","./src/app/pages/security-question-create/security-question-create.component.ts","./src/app/pages/security-question-create/security-question-create.component.html","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n============================================\n; Title:  auth-layout.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Auth layout component HTML file\n;===========================================\n-->\n<div fxLayout=\"column\">\n    <router-outlet></router-outlet>\n</div>\n","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 19 Sep 2021\n * Title: user-list.component.ts\n*/\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteRecordDialogComponent } from './../../shared/delete-record-dialog/delete-record-dialog.component';\nimport { UserService } from './../../shared/user.service';\nimport {User} from './../../shared/user.interface';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users: User [];\n  displayedColumns = ['userName', 'firstName', 'lastName', 'phoneNumber', 'address', 'email', 'functions'];\n\n  constructor (private dialog: MatDialog, private userService: UserService){\n\n      this.userService.findAllUsers().subscribe(res => {\n          this.users = res['data'];\n          console.log(this.users);\n      }, err => {\n          console.log(err);\n      });\n  }\n\n  ngOnInit(): void{\n\n  }\n\n  delete(userId, recordId): void {\n      const dialogRef = this.dialog.open(DeleteRecordDialogComponent,{\n          data: {\n              recordId,\n              dialogHeader: 'Delete Record Dialog',\n              dialogBody: `Are you sure you want to delete user ${recordId}?`\n          },\n          disableClose: true,\n          width: '800px'\n      });\n\n      dialogRef.afterClosed().subscribe(result =>{\n          if (result === 'confirm') {\n              this.userService.deleteUser(userId).subscribe(res => {\n                  console.log(`User delete`);\n                  this.users = this.users.filter(u => u._id !== userId);\n              });\n          }\n      });\n  }\n}","<div fxLayout ='column'>\n    <mat-card>\n        <mat-card-title>Users Configuration</mat-card-title>\n        <mat-card-subtitle>\n            <button mat-button routerLink=\"/users/create/new\" color =\"accent\">Create</button>\n        </mat-card-subtitle>\n\n        <mat-card-content *ngIf=\"users\">\n            <table mat-table [dataSource]= \"user\">\n                <ng-container matColumnDef=\"userName\">\n                    <th mat-header-cell *matHeaderCellDef>Username</th>\n                    <td mat-cell *matCelLDef =\"let element\">\n                        {{ element.userName }} \n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"firstName\">\n                    <th mat-header-cell *matHeaderCellDef>First Name</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.firstName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"lastName\">\n                    <th mat-header-cell *matHeaderCellDef>Last Name</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.lastName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"phoneNumber\">\n                    <th mat-header-cell *matHeaderCellDef>Phone Name</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.phoneNumber}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"address\">\n                    <th mat-header-cell *matHeaderCellDef>Address</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.address}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef>Email</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.email}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"functions\">\n                    <th mat-header-cell *matHeaderCellDef>Functions</th>\n                    <td mat-cell *matCellDef = \"let element\">\n                        <button mat-icon-button routerLink=\"/users/{{element._id}}\">\n                        <mat-icon color=\"accent\">delete</mat-icon>\n                        </button>                 \n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef = \"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-card-content>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n============================================\n; Title: user.service.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 September 2021\n; Description: User service TypeScript file\n;===========================================\n*/\n\n// import statements\nimport { Injectable } from \"@angular/core\";\nimport { User } from \"./user.interface\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  findAllUsers(): Observable<any> {\n    return this.http.get(\"/api/users\");\n  }\n\n  findUserById(userId: string): Observable<any> {\n    return this.http.get(\"/api/users/\" + userId);\n  }\n\n  createUser(user: User): Observable<any> {\n    return this.http.post(\"/api/users/\", {\n      userName: user.userName,\n      password: user.password,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      email: user.email,\n    });\n  }\n\n  updateUser(userId: string, user: User): Observable<any> {\n    return this.http.put(\"/api/users/\" + userId, {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      email: user.email,\n    });\n  }\n\n  deleteUser(userId: string): Observable<any> {\n    return this.http.delete(\"/api/users/\" + userId);\n  }\n}\n","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 17 Sep 2021\n * Title: auth.guard.ts\n*/\n\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n  export class AuthGuard implements CanActivate {\n      constructor( private router: Router, private cookieService: CookieService){}\n\n      canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n          const isAuthenticated = this.cookieService.get('sessionuser');\n\n          if (isAuthenticated) {\n              return true;\n          } else {\n              this.router.navigate(['/session/signin']);\n              return false;\n          }\n      }\n  }","/*\n============================================\n; Title: user-create.component.ts\n; Author: Adam Luna\n; Date: 19 September 2021\n; Description: User create component TypeScript file\n;===========================================\n*/\n// import statements\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"./../../shared/user.interface\";\nimport { UserService } from \"./../../shared/user.service\";\n\n@Component({\n  selector: \"app-user-create\",\n  templateUrl: \"./user-create.component.html\",\n  styleUrls: [\"./user-create.component.css\"],\n})\nexport class UserCreateComponent implements OnInit {\n  user: User;\n  userId: string;\n  form: FormGroup;\n  roles: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\n        ]),\n      ],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [\n        null,\n        Validators.compose([Validators.required, Validators.email]),\n      ],\n    });\n  }\n\n  createUser(): void {\n    const newUser: User = {\n      userName: this.form.controls.userName.value,\n      password: this.form.controls.password.value,\n      firstName: this.form.controls.firstName.value,\n      lastName: this.form.controls.lastName.value,\n      phoneNumber: this.form.controls.phoneNumber.value,\n      address: this.form.controls.address.value,\n      email: this.form.controls.address.value,\n    };\n\n    this.userService.createUser(newUser).subscribe(\n      (res) => {\n        this.router.navigate([\"/users\"]);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/users\"]);\n  }\n}\n","<p>user-create works!</p>\n","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 19 Sep 2021\n * Title: user-details.component.ts\n*/\n\n//import statements\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from './../../shared/user.service';\nimport { User } from './../../shared/user.interface';\n\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  user: User;\n  userId: string;\n  form: FormGroup;\n  roles: any;\n  constructor(private route: ActivatedRoute, private fb:FormBuilder, private router: Router,\n    private userService: UserService){\n        this.userId = this.route.snapshot.paramMap.get('userId');\n\n        this.userService.findUserById(this.userId).subscribe(res =>{\n            this.user = res['data'];\n        }, err => {\n            console.log(err);\n        }, () => {\n            this.form.controls.firstName.setValue(this.user.firstName);\n            this.form.controls.lastName.setValue(this.user.lastName);\n            this.form.controls.phoneNumber.setValue(this.user.phoneNumber);\n            this.form.controls.address.setValue(this.user.address);\n            this.form.controls.email.setValue(this.user.email);\n        });\n    }\n\n    //ensure field is filled in\n    ngOnInit(): void{\n        this.form = this.fb.group({\n            firstName: [null, Validators.compose([Validators.required])],\n            lastName: [null, Validators.compose([Validators.required])],\n            phoneNumber: [null, Validators.compose([Validators.required])],\n            address: [null, Validators.compose([Validators.required])],\n            email: [null, Validators.compose([Validators.required])],\n        });\n    }\n\n    //updates form values\n    saveUser(): void{\n        const updatedUser: User ={\n            firstName: this.form.controls.firstName.value,\n            lastName: this.form.controls.lastName.value,\n            phoneNumber: this.form.controls.phoneNumber.value,\n            address: this.form.controls.address.value,\n            email: this.form.controls.email.value\n        };\n\n        this.userService.updateUser(this.userId, updatedUser).subscribe(res => {\n            this.router.navigate(['/users']);\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    //cancel option. brings user back to user page\n    cancel(): void{\n        this.router.navigate(['/users']);\n    }\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>User Details</mat-card-title>\n\n        <br/>\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveUser()\" #userForm (keydown.enter)= \"$event.preventDefault()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\"\n                        placeholder=\"First name\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.firstName.hasError('required') && form.controls.firstName.touched\">\n                            First name is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\"\n                        placeholder=\"Last name\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.lastName.hasError('required') && form.controls.lastName.touched\">\n                            Last name is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\"\n                        placeholder=\"Phone number\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.phoneNumber.hasError('required') && form.controls.phoneNumber.touched\">\n                            Phone number is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['address']\"\n                        placeholder=\"Address\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.address.hasError('required') && form.controls.address.touched\">\n                            Address is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['email']\"\n                        placeholder=\"Email\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('required') && form.controls.email.touched\">\n                            Email is a required field.\n                        </mat-error>\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('email') && form.controls.email.touched\">\n                            Invalid email format.\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                </mat-card-content>\n\n                <br/>\n\n                <mat-card-actions align=\"end\">\n                    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\n                    <button mat-raised-button [disabled]=\"!form.valid\" color = \"accent\">Submit</button>\n                </mat-card-actions>\n        </form>\n    </mat-card>\n</div>\n                ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/*\n============================================\n; Title: signin-component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Signin component TypeScript file\n;===========================================\n*/\n// import statements\nimport { Component, OnInit, ɵɵsetComponentScope } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-signin\",\n  templateUrl: \"./signin.component.html\",\n  styleUrls: [\"./signin.component.css\"],\n})\nexport class SigninComponent implements OnInit {\n  form: FormGroup;\n  errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private cookieService: CookieService,\n    private fb: FormBuilder,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\n        ]),\n      ],\n    });\n  }\n\n  signin(): void {\n    const userName = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    this.http\n      .post(\"/api/session/signin\", {\n        userName,\n        password,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res[\"data\"]);\n          if (res[\"data\"].userName) {\n            /**\n             * User is authenticated and we can grant them access\n             */\n            this.cookieService.set(\"sessioniser\", res[\"data\"].userName, 1);\n            this.router.navigate([\"/\"]);\n          }\n        },\n        (err) => {\n          console.log(err);\n          this.errorMessage = err.error.message;\n        }\n      );\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row>\n        <div style=\"width: 90%;\">\n            <p style=\"text-align: center; padding-left: 10%; font-weight: lighter;\">\n            Bob's Computer Repair Shop <br />\n            <mat-icon>build</mat-icon>\n            </p>\n        </div>\n    </mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n</mat-toolbar>\n    \n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\n    <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\n        <mat-card class=\"mat-card-top pa-0\">\n            <mat-card-title style=\"text-align: center; font-size: 48px; font-weight: lighter;\"\n                    class=\"mat-headline\">Employee Sign In\n            </mat-card-title>\n\n            <br />\n\n            <mat-card-subtitle style=\"text-align: center; font-weight: lighter;\">\n                <a routerLink=\"/\" class=\"register-link\">or create and account</a>\n            </mat-card-subtitle>\n\n            <br />\n\n            <mat-card-subtitle style=\"text-align: center;\" class=\"mat-headline\">\n                You must enter a valid username/password to proceed\n            </mat-card-subtitle>\n\n            <mat-card-content>\n                <!-- for any error message-->\n                <small style=\"color: #c51d36;\" *ngIf=\"errorMessage\">{{ errorMessage }}<br/></small>\n                <mat-card class=\"mat-elevation-z0\">\n                    <form [formGroup]=\"form\" (ngSubmit)=\"signin(); form.reset()\" #loginForm=\"ngForm\">\n                        <mat-card-content fxLayout=\"column\" fxLayoutGap=\"10px\">\n                            <mat-form-field>\n                                <input type=\"text\" matInput fxFlex [formControl]=\"form.controls['userName']\"\n                                    placeholder=\"User Name\"/>\n\n                                    <mat-error class=\"error\" *ngIf=\"form.controls.userName.hasError('required') && form.controls.userName.touched\">\n                                        Username is a required field.\n                                    </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <input type=\"password\" matInput fxFlex [formControl]=\"form.controls['password']\"\n                                    placeholder=\"Password\"/>\n                                <!--error prompts at the form fill-->\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('required') && form.controls.password.touched\">\n                                    Password is a required field.\n                                </mat-error>\n\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('pattern') && form.controls.password.touched\">\n                                    Password must be at least 8 characters, contain one letter, and one number.\n                                </mat-error>\n\n                            </mat-form-field>\n                        </mat-card-content>\n\n                        <mat-card-actions>\n                            <button type=\"submit\" [disabled]=\"!form.valid\" fxFlex mat-raised-button color=\"accent\">Submit</button>\n                        </mat-card-actions>\n                        <br/>\n                        <a fxLayoutAlign=\"end\" class=\"forgot-password-link\" routerLink=\"/\">Forgot password?</a>\n                    </form>\n                </mat-card>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","/**\n * Author: Prof. Richard Krasso\n * Modified By: Eunice Lim, Adam Luna, Mark Watson\n * Date: 18 Sept 2021\n * Title: app.module.ts\n */\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeleteRecordDialogComponent } from './shared/delete-record-dialog/delete-record-dialog.component';\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { UserListComponent } from './pages/user-list/user-list.component';\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    DeleteRecordDialogComponent,\n    SecurityQuestionDetailsComponent,\n    SecurityQuestionListComponent,\n    SigninComponent,\n    UserListComponent,\n    SecurityQuestionCreateComponent,\n    UserCreateComponent,\n    UserDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * Date: 18 September 2021\n * Title: BCRS - Security Question Service\n * Author: Mark Watson\n * Description: Security question service file.\n */\n\nimport { Injectable } from '@angular/core';\nimport { SecurityQuestion } from './security-question.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n\n  constructor(private http: HttpClient) { }\n\n  // findAll\n  findAllSecurityQuestions(): Observable<any> {\n    return this.http.get('/api/security-questions');\n  }\n\n  // findById\n  findSecurityQuestionById(questionId: string): Observable<any> {\n    return this.http.get('/api/security-questions/' + questionId);\n  }\n\n  // create\n  createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\n    return this.http.post('/api/security-questions', {\n      text: newSecurityQuestion.text\n    })\n  }\n\n  // update\n  updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\n    return this.http.put('/api/security-questions/'+ questionId, {\n      text: updatedSecurityQuestion.text\n    })\n  }\n\n  // delete\n  deleteSecurityQuestion(questionId: string): Observable<any> {\n    return this.http.delete('/api/security-questions/'+ questionId);\n  }\n}\n","/*\n============================================\n; Title: security-question-details.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Security question details component TypeScript file\n;===========================================\n*/\n\n// import statements\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\n\n@Component({\n  selector: \"app-security-question-details\",\n  templateUrl: \"./security-question-details.component.html\",\n  styleUrls: [\"./security-question-details.component.css\"],\n})\nexport class SecurityQuestionDetailsComponent implements OnInit {\n  question: SecurityQuestion;\n  questionId: string;\n  form: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private router: Router,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    this.questionId = this.route.snapshot.paramMap.get(\"questionId\");\n\n    this.securityQuestionService\n      .findSecurityQuestionById(this.questionId)\n      .subscribe(\n        (res) => {\n          this.question = res[\"data\"];\n        },\n        (err) => {\n          console.log(err);\n        },\n        () => {\n          this.form.controls.text.setValue(this.question.text);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      text: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  saveQuestion(): void {\n    const updatedSecurityQuestion: SecurityQuestion = {\n      text: this.form.controls.text.value,\n    };\n\n    this.securityQuestionService\n      .updateSecurityQuestion(this.questionId, updatedSecurityQuestion)\n      .subscribe((res) => {\n        this.router.navigate([\"/security-questions\"]);\n      });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/security-questions\"]);\n  }\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Security Question Details</mat-card-title>\n\n        <br />\n\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveQuestion()\" #questionForm>\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input matInput [formControl]=\"form.controls['text']\"\n                        placeholder=\"Security question text...\" (keydown.enter)=\"saveQuestion()\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.text.hasError('required') && form.controls.text.touched\">\n                            Security question is a required field.\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n\n            <br />\n            <mat-card-actions  align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\n                <button mat-raised button [disabled]=\"!form.valid\" color=\"accent\">Submit</button>\n            </mat-card-actions>\n        </form>\n\n    </mat-card>\n</div>","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 17 Sep 2021\n * Title: delete-record-dialog.component.ts\n*/\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog',\n  templateUrl: './delete-record-dialog.component.html',\n  styleUrls: ['./delete-record-dialog.component.css']\n})\nexport class DeleteRecordDialogComponent implements OnInit {\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  \n  /** to delete the current record via the id, header and body */\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\n    this.recordId = data.recordId;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody; \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- delete confirmation pop up -->\n<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p>{{ dialogBody }}</p>\n  <small style=\"color: red\">WARNING: Deleted records cannot be recovered.</small>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button matDialogClose=\"cancel\">\n    No Thanks\n  </button>\n  <button mat-raised-button matDialogClose=\"confirm\" cdkFocusInitial>\n    Accept\n  </button>\n</div>","/*\n============================================\n; Title: security-question-list.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Security question list component TypeScript file\n;===========================================\n*/\n\n// import statements\nimport { DeleteRecordDialogComponent } from \"./../../shared/delete-record-dialog/delete-record-dialog.component\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\n\n@Component({\n  selector: \"app-security-question-list\",\n  templateUrl: \"./security-question-list.component.html\",\n  styleUrls: [\"./security-question-list.component.css\"],\n})\nexport class SecurityQuestionListComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  displayColumns = [\"question\", \"functions\"];\n\n  constructor(private dialog: MatDialog, private securityQuestionService: SecurityQuestionService) {\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  delete(recordId: string): void {\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\n      data: {\n        recordId,\n        dialogHeader: \"Delete Record Dialog\",\n        dialogBody: `Are you sure you want to delete the selected security question?`,\n      },\n      disableClose: true,\n      width: \"800px\",\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === \"confirm\") {\n        this.securityQuestionService\n          .deleteSecurityQuestion(recordId)\n          .subscribe((res) => {\n            console.log(\"Security question deleted\");\n            this.securityQuestions = this.securityQuestions.filter(\n              q => q._id !== recordId);\n          });\n      }\n    });\n  }\n}\n","<div fxLayout=\"column\">\n    <mat-card>\n        <mat-card-title>Security Questions Configuration</mat-card-title>\n        <mat-card-subtitle>\n            <button mat-button routerLink=\"/security-questions/create/new\" color=\"accent\">Create</button>\n        </mat-card-subtitle>\n\n        <br />\n        <mat-card-content *ngIf=\"securityQuestions\">\n            <table mat-table [dataSource]=\"securityQuestions\">\n                <ng-container matColumnDef=\"question\">\n                    <th mat-header-cell *matHeaderCellDef>Question</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        {{ element.text }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"functions\">\n                <th mat-header-cell *matHeaderCellDef>Functions</th>\n\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button routerLink=\"/security-questions/{{element._id}}\">\n                    <mat-icon color=\"accent\">edit</mat-icon>\n                    </button>\n                    <button mat-icon-button (click)=\"delete(element._id)\">\n                        <mat-icon color=\"accent\">delete</mat-icon>\n                    </button>\n                </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-card-content>\n    </mat-card>\n</div>","/**\n * Date: 18 September 2021\n * Title: BCRS - Security Question Create\n * Author: Mark Watson\n * Description: Security question create component.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SecurityQuestionService } from './../../shared/security-question.service';\nimport { SecurityQuestion } from './../../shared/security-question.interface';\n\n@Component({\n  selector: 'app-security-question-create',\n  templateUrl: './security-question-create.component.html',\n  styleUrls: ['./security-question-create.component.css']\n})\n\nexport class SecurityQuestionCreateComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router, private securityQuestionService: SecurityQuestionService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      text: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  // create security question from input on the form\n  create(): void {\n    const newSecurityQuestion: SecurityQuestion = {\n      text: this.form.controls.text.value\n    }\n\n    this.securityQuestionService.createSecurityQuestion(newSecurityQuestion).subscribe(res => {\n      this.router.navigate(['security-questions']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  // to cancel\n  cancel(): void {\n    this.router.navigate(['/security-questions']);\n  }\n}\n","<!--\n============================================\n; Title:  security-question-create.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: HTML file for the create security question page\n;===========================================\n-->\n\n<div fxLayout=\"column\">\n  <mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create Security Question</mat-card-title>\n\n    <br />\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"create()\" #securityQuestionform>\n      <mat-card-content>\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n          <mat-form-field>\n            <input\n              type=\"text\"\n              matInput\n              [formControl]=\"form.controls['text']\"\n              placeholder=\"Question text\"\n              (keydown.enter)=\"create()\"\n            />\n\n            <mat-error\n              *ngIf=\"\n                form.controls.text.hasError('required') &&\n                form.controls.text.touched\n              \"\n              class=\"error\"\n            >\n              Security questions is a required field.\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n\n      <br />\n      <mat-card-actions align=\"end\">\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          [disabled]=\"!form.valid\"\n          mat-raised-button\n          color=\"accent\"\n        >\n          Submit\n        </button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n\n  <!-- navigation -->\n  <nav fxFlex>\n    <mat-toolbar>\n      <!-- navbar container -->\n      <div class=\"navbar-container\">\n        <!-- logo -->\n        <button class=\"logo\" routerLink=\"/\" mat-button>BCRS</button>\n\n        <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\n        <button class=\"navbar-link\" mat-button>About</button>\n      </div>\n\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n\n  <!-- footer -->\n  <div fxFlex>\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop - <a href=\"https://www.bellevue.edu/\" class=\"bu-link\" target=\"_blank\">Bellevue University</a>\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n\n</div>\n","/**\n * Date: 18 September 2021\n * Title: BCRS - App Routing\n * Author: Mark Watson\n * Description: App routing file.\n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { UserListComponent } from './pages/user-list/user-list.component';\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\nimport { AuthGuard } from './shared/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'users',\n        component: UserListComponent,\n      },\n      {\n        path: 'users/:userId',\n        component: UserDetailsComponent,\n      },\n      {\n        path: 'users/create/new',\n        component: UserCreateComponent,\n      },\n      {\n        path: 'security-questions',\n        component: SecurityQuestionListComponent,\n      },\n      {\n        path: 'security-questions/:id',\n        component: SecurityQuestionDetailsComponent,\n      },\n      {\n        path: 'security-questions/create/new',\n        component: SecurityQuestionCreateComponent\n      }\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent,\n      },\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}