{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/user-list/user-list.component.ts","webpack:///src/app/pages/user-list/user-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/user.service.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/user-create/user-create.component.ts","webpack:///src/app/pages/user-create/user-create.component.html","webpack:///src/app/pages/user-details/user-details.component.ts","webpack:///src/app/pages/user-details/user-details.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/security-question.service.ts","webpack:///src/app/pages/security-question-details/security-question-details.component.ts","webpack:///src/app/pages/security-question-details/security-question-details.component.html","webpack:///src/app/shared/delete-record-dialog/delete-record-dialog.component.ts","webpack:///src/app/shared/delete-record-dialog/delete-record-dialog.component.html","webpack:///src/app/pages/security-question-list/security-question-list.component.ts","webpack:///src/app/pages/security-question-list/security-question-list.component.html","webpack:///src/app/pages/security-question-create/security-question-create.component.ts","webpack:///src/app/pages/security-question-create/security-question-create.component.html","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","AuthLayoutComponent","UserListComponent","dialog","userService","displayedColumns","findAllUsers","subscribe","res","users","console","log","err","userId","recordId","dialogRef","open","data","dialogHeader","dialogBody","disableClose","width","afterClosed","result","deleteUser","filter","u","_id","environment","production","UserService","http","get","user","post","userName","password","firstName","lastName","phoneNumber","address","email","put","AuthGuard","router","cookieService","route","state","isAuthenticated","navigate","UserCreateComponent","fb","form","group","compose","required","pattern","newUser","controls","value","createUser","UserDetailsComponent","snapshot","paramMap","findUserById","setValue","updatedUser","updateUser","saveUser","$event","preventDefault","cancel","AppComponent","SigninComponent","set","errorMessage","error","message","signin","AppModule","SecurityQuestionService","questionId","newSecurityQuestion","text","updatedSecurityQuestion","SecurityQuestionDetailsComponent","securityQuestionService","findSecurityQuestionById","question","updateSecurityQuestion","saveQuestion","DeleteRecordDialogComponent","SecurityQuestionListComponent","displayColumns","findAllSecurityQuestions","securityQuestions","deleteSecurityQuestion","q","SecurityQuestionCreateComponent","createSecurityQuestion","create","BaseLayoutComponent","year","Date","now","routes","path","component","children","canActivate","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","relativeLinkResolution","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" class=\"main-welcome\">\r\n  <h1 class=\"title\">\r\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\r\n    <span class=\"subtitle\">\r\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\r\n    </span>\r\n  </h1>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-layout',\r\n  templateUrl: './auth-layout.component.html',\r\n  styleUrls: ['./auth-layout.component.css']\r\n})\r\nexport class AuthLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--\r\n============================================\r\n; Title:  auth-layout.component.html\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Auth layout component HTML file\r\n;===========================================\r\n-->\r\n<div fxLayout=\"column\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 19 Sep 2021\r\n * Title: user-list.component.ts\r\n*/\r\n\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteRecordDialogComponent } from './../../shared/delete-record-dialog/delete-record-dialog.component';\r\nimport { UserService } from './../../shared/user.service';\r\nimport {User} from './../../shared/user.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: User [];\r\n  displayedColumns = ['userName', 'firstName', 'lastName', 'phoneNumber', 'address', 'email', 'functions'];\r\n\r\n  constructor (private dialog: MatDialog, private userService: UserService){\r\n\r\n      this.userService.findAllUsers().subscribe(res => {\r\n          this.users = res['data'];\r\n          console.log(this.users);\r\n      }, err => {\r\n          console.log(err);\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void{\r\n\r\n  }\r\n\r\n  delete(userId, recordId): void {\r\n      const dialogRef = this.dialog.open(DeleteRecordDialogComponent,{\r\n          data: {\r\n              recordId,\r\n              dialogHeader: 'Delete Record Dialog',\r\n              dialogBody: `Are you sure you want to delete user ${recordId}?`\r\n          },\r\n          disableClose: true,\r\n          width: '800px'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result =>{\r\n          if (result === 'confirm') {\r\n              this.userService.deleteUser(userId).subscribe(res => {\r\n                  console.log(`User delete`);\r\n                  this.users = this.users.filter(u => u._id !== userId);\r\n              });\r\n          }\r\n      });\r\n  }\r\n}","<div fxLayout ='column'>\r\n    <mat-card>\r\n        <mat-card-title>Users Configuration</mat-card-title>\r\n        <mat-card-subtitle>\r\n            <button mat-button routerLink=\"/users/create/new\" color =\"accent\">Create</button>\r\n        </mat-card-subtitle>\r\n\r\n        <mat-card-content *ngIf=\"users\">\r\n            <table mat-table [dataSource]= \"user\">\r\n                <ng-container matColumnDef=\"userName\">\r\n                    <th mat-header-cell *matHeaderCellDef>Username</th>\r\n                    <td mat-cell *matCelLDef =\"let element\">\r\n                        {{ element.userName }} \r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"firstName\">\r\n                    <th mat-header-cell *matHeaderCellDef>First Name</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.firstName}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"lastName\">\r\n                    <th mat-header-cell *matHeaderCellDef>Last Name</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.lastName}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"phoneNumber\">\r\n                    <th mat-header-cell *matHeaderCellDef>Phone Name</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.phoneNumber}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"address\">\r\n                    <th mat-header-cell *matHeaderCellDef>Address</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.address}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef>Email</th>\r\n                    <td mat-cell *matCellDef = \"let element\">{{element.email}}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"functions\">\r\n                    <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n                    <td mat-cell *matCellDef = \"let element\">\r\n                        <button mat-icon-button routerLink=\"/users/{{element._id}}\">\r\n                        <mat-icon color=\"accent\">delete</mat-icon>\r\n                        </button>                 \r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef = \"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/*\r\n============================================\r\n; Title: user.service.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 19 September 2021\r\n; Description: User service TypeScript file\r\n;===========================================\r\n*/\r\n\r\n// import statements\r\nimport { Injectable } from \"@angular/core\";\r\nimport { User } from \"./user.interface\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  findAllUsers(): Observable<any> {\r\n    return this.http.get(\"/api/users\");\r\n  }\r\n\r\n  findUserById(userId: string): Observable<any> {\r\n    return this.http.get(\"/api/users/\" + userId);\r\n  }\r\n\r\n  createUser(user: User): Observable<any> {\r\n    return this.http.post(\"/api/users/\", {\r\n      userName: user.userName,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      email: user.email,\r\n    });\r\n  }\r\n\r\n  updateUser(userId: string, user: User): Observable<any> {\r\n    return this.http.put(\"/api/users/\" + userId, {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      email: user.email,\r\n    });\r\n  }\r\n\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.http.delete(\"/api/users/\" + userId);\r\n  }\r\n}\r\n","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 17 Sep 2021\r\n * Title: auth.guard.ts\r\n*/\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n  export class AuthGuard implements CanActivate {\r\n      constructor( private router: Router, private cookieService: CookieService){}\r\n\r\n      canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n          const isAuthenticated = this.cookieService.get('sessionuser');\r\n\r\n          if (isAuthenticated) {\r\n              return true;\r\n          } else {\r\n              this.router.navigate(['/session/signin']);\r\n              return false;\r\n          }\r\n      }\r\n  }","/*\r\n============================================\r\n; Title: user-create.component.ts\r\n; Author: Adam Luna\r\n; Date: 19 September 2021\r\n; Description: User create component TypeScript file\r\n;===========================================\r\n*/\r\n// import statements\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"./../../shared/user.interface\";\r\nimport { UserService } from \"./../../shared/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-user-create\",\r\n  templateUrl: \"./user-create.component.html\",\r\n  styleUrls: [\"./user-create.component.css\"],\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  user: User;\r\n  userId: string;\r\n  form: FormGroup;\r\n  roles: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])],\r\n      password: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\r\n        ]),\r\n      ],\r\n      firstName: [null, Validators.compose([Validators.required])],\r\n      lastName: [null, Validators.compose([Validators.required])],\r\n      phoneNumber: [null, Validators.compose([Validators.required])],\r\n      address: [null, Validators.compose([Validators.required])],\r\n      email: [\r\n        null,\r\n        Validators.compose([Validators.required, Validators.email]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  createUser(): void {\r\n    const newUser: User = {\r\n      userName: this.form.controls.userName.value,\r\n      password: this.form.controls.password.value,\r\n      firstName: this.form.controls.firstName.value,\r\n      lastName: this.form.controls.lastName.value,\r\n      phoneNumber: this.form.controls.phoneNumber.value,\r\n      address: this.form.controls.address.value,\r\n      email: this.form.controls.address.value,\r\n    };\r\n\r\n    this.userService.createUser(newUser).subscribe(\r\n      (res) => {\r\n        this.router.navigate([\"/users\"]);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"/users\"]);\r\n  }\r\n}\r\n","<p>user-create works!</p>\r\n","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 19 Sep 2021\r\n * Title: user-details.component.ts\r\n*/\r\n\r\n//import statements\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../shared/user.service';\r\nimport { User } from './../../shared/user.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  user: User;\r\n  userId: string;\r\n  form: FormGroup;\r\n  roles: any;\r\n  constructor(private route: ActivatedRoute, private fb:FormBuilder, private router: Router,\r\n    private userService: UserService){\r\n        this.userId = this.route.snapshot.paramMap.get('userId');\r\n\r\n        this.userService.findUserById(this.userId).subscribe(res =>{\r\n            this.user = res['data'];\r\n        }, err => {\r\n            console.log(err);\r\n        }, () => {\r\n            this.form.controls.firstName.setValue(this.user.firstName);\r\n            this.form.controls.lastName.setValue(this.user.lastName);\r\n            this.form.controls.phoneNumber.setValue(this.user.phoneNumber);\r\n            this.form.controls.address.setValue(this.user.address);\r\n            this.form.controls.email.setValue(this.user.email);\r\n        });\r\n    }\r\n\r\n    //ensure field is filled in\r\n    ngOnInit(): void{\r\n        this.form = this.fb.group({\r\n            firstName: [null, Validators.compose([Validators.required])],\r\n            lastName: [null, Validators.compose([Validators.required])],\r\n            phoneNumber: [null, Validators.compose([Validators.required])],\r\n            address: [null, Validators.compose([Validators.required])],\r\n            email: [null, Validators.compose([Validators.required])],\r\n        });\r\n    }\r\n\r\n    //updates form values\r\n    saveUser(): void{\r\n        const updatedUser: User ={\r\n            firstName: this.form.controls.firstName.value,\r\n            lastName: this.form.controls.lastName.value,\r\n            phoneNumber: this.form.controls.phoneNumber.value,\r\n            address: this.form.controls.address.value,\r\n            email: this.form.controls.email.value\r\n        };\r\n\r\n        this.userService.updateUser(this.userId, updatedUser).subscribe(res => {\r\n            this.router.navigate(['/users']);\r\n        }, err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    //cancel option. brings user back to user page\r\n    cancel(): void{\r\n        this.router.navigate(['/users']);\r\n    }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-card-title>User Details</mat-card-title>\r\n\r\n        <br/>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveUser()\" #userForm (keydown.enter)= \"$event.preventDefault()\">\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\"\r\n                        placeholder=\"First name\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.firstName.hasError('required') && form.controls.firstName.touched\">\r\n                            First name is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\"\r\n                        placeholder=\"Last name\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.lastName.hasError('required') && form.controls.lastName.touched\">\r\n                            Last name is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\"\r\n                        placeholder=\"Phone number\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.phoneNumber.hasError('required') && form.controls.phoneNumber.touched\">\r\n                            Phone number is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['address']\"\r\n                        placeholder=\"Address\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.address.hasError('required') && form.controls.address.touched\">\r\n                            Address is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['email']\"\r\n                        placeholder=\"Email\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('required') && form.controls.email.touched\">\r\n                            Email is a required field.\r\n                        </mat-error>\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('email') && form.controls.email.touched\">\r\n                            Invalid email format.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                </mat-card-content>\r\n\r\n                <br/>\r\n\r\n                <mat-card-actions align=\"end\">\r\n                    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n                    <button mat-raised-button [disabled]=\"!form.valid\" color = \"accent\">Submit</button>\r\n                </mat-card-actions>\r\n        </form>\r\n    </mat-card>\r\n</div>\r\n                ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`,\r\n  styles: [``]\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n","/*\r\n============================================\r\n; Title: signin-component.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Signin component TypeScript file\r\n;===========================================\r\n*/\r\n// import statements\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.css\"],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private cookieService: CookieService,\r\n    private fb: FormBuilder,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])],\r\n      password: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  signin(): void {\r\n    const userName = this.form.controls.userName.value;\r\n    const password = this.form.controls.password.value;\r\n\r\n    this.http\r\n      .post(\"/api/session/signin\", {\r\n        userName,\r\n        password,\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res[\"data\"]);\r\n          if (res[\"data\"].userName) {\r\n            /**\r\n             * User is authenticated and we can grant them access\r\n             */\r\n            this.cookieService.set(\"sessioniser\", res[\"data\"].userName, 1);\r\n            this.router.navigate([\"/\"]);\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.errorMessage = err.error.message;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row>\r\n        <div style=\"width: 90%;\">\r\n            <p style=\"text-align: center; padding-left: 10%; font-weight: lighter;\">\r\n            Bob's Computer Repair Shop <br />\r\n            <mat-icon>build</mat-icon>\r\n            </p>\r\n        </div>\r\n    </mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n    <mat-toolbar-row></mat-toolbar-row>\r\n</mat-toolbar>\r\n    \r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n    <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n        <mat-card class=\"mat-card-top pa-0\">\r\n            <mat-card-title style=\"text-align: center; font-size: 48px; font-weight: lighter;\"\r\n                    class=\"mat-headline\">Employee Sign In\r\n            </mat-card-title>\r\n\r\n            <br />\r\n\r\n            <mat-card-subtitle style=\"text-align: center; font-weight: lighter;\">\r\n                <a routerLink=\"/\" class=\"register-link\">or create an account</a>\r\n            </mat-card-subtitle>\r\n\r\n            <br />\r\n\r\n            <mat-card-subtitle style=\"text-align: center;\" class=\"mat-headline\">\r\n                You must enter a valid username/password to proceed\r\n            </mat-card-subtitle>\r\n\r\n            <mat-card-content>\r\n                <!-- for any error message-->\r\n                <small style=\"color: #c51d36;\" *ngIf=\"errorMessage\">{{ errorMessage }}<br/></small>\r\n                <mat-card class=\"mat-elevation-z0\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"signin(); form.reset()\" #loginForm=\"ngForm\">\r\n                        <mat-card-content fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                            <mat-form-field>\r\n                                <input type=\"text\" matInput fxFlex [formControl]=\"form.controls['userName']\"\r\n                                    placeholder=\"User Name\"/>\r\n\r\n                                    <mat-error class=\"error\" *ngIf=\"form.controls.userName.hasError('required') && form.controls.userName.touched\">\r\n                                        Username is a required field.\r\n                                    </mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field>\r\n                                <input type=\"password\" matInput fxFlex [formControl]=\"form.controls['password']\"\r\n                                    placeholder=\"Password\"/>\r\n                                <!--error prompts at the form fill-->\r\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('required') && form.controls.password.touched\">\r\n                                    Password is a required field.\r\n                                </mat-error>\r\n\r\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('pattern') && form.controls.password.touched\">\r\n                                    Password must be at least 8 characters, contain one letter, and one number.\r\n                                </mat-error>\r\n\r\n                            </mat-form-field>\r\n                        </mat-card-content>\r\n\r\n                        <mat-card-actions>\r\n                            <button type=\"submit\" [disabled]=\"!form.valid\" fxFlex mat-raised-button color=\"accent\">Submit</button>\r\n                        </mat-card-actions>\r\n                        <br/>\r\n                        <a fxLayoutAlign=\"end\" class=\"forgot-password-link\" routerLink=\"/\">Forgot password?</a>\r\n                    </form>\r\n                </mat-card>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","/**\r\n * Author: Prof. Richard Krasso\r\n * Modified By: Eunice Lim, Adam Luna, Mark Watson\r\n * Date: 18 Sept 2021\r\n * Title: app.module.ts\r\n */\r\n\r\n\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\r\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DeleteRecordDialogComponent } from './shared/delete-record-dialog/delete-record-dialog.component';\r\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\r\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { UserListComponent } from './pages/user-list/user-list.component';\r\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\r\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\r\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    BaseLayoutComponent,\r\n    AuthLayoutComponent,\r\n    DeleteRecordDialogComponent,\r\n    SecurityQuestionDetailsComponent,\r\n    SecurityQuestionListComponent,\r\n    SigninComponent,\r\n    UserListComponent,\r\n    SecurityQuestionCreateComponent,\r\n    UserCreateComponent,\r\n    UserDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/**\r\n * Date: 18 September 2021\r\n * Title: BCRS - Security Question Service\r\n * Author: Mark Watson\r\n * Description: Security question service file.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { SecurityQuestion } from './security-question.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SecurityQuestionService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // findAll\r\n  findAllSecurityQuestions(): Observable<any> {\r\n    return this.http.get('/api/security-questions');\r\n  }\r\n\r\n  // findById\r\n  findSecurityQuestionById(questionId: string): Observable<any> {\r\n    return this.http.get('/api/security-questions/' + questionId);\r\n  }\r\n\r\n  // create\r\n  createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\r\n    return this.http.post('/api/security-questions', {\r\n      text: newSecurityQuestion.text\r\n    })\r\n  }\r\n\r\n  // update\r\n  updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\r\n    return this.http.put('/api/security-questions/'+ questionId, {\r\n      text: updatedSecurityQuestion.text\r\n    })\r\n  }\r\n\r\n  // delete\r\n  deleteSecurityQuestion(questionId: string): Observable<any> {\r\n    return this.http.delete('/api/security-questions/'+ questionId);\r\n  }\r\n}\r\n","/*\r\n============================================\r\n; Title: security-question-details.component.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Security question details component TypeScript file\r\n;===========================================\r\n*/\r\n\r\n// import statements\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\r\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\r\n\r\n@Component({\r\n  selector: \"app-security-question-details\",\r\n  templateUrl: \"./security-question-details.component.html\",\r\n  styleUrls: [\"./security-question-details.component.css\"],\r\n})\r\nexport class SecurityQuestionDetailsComponent implements OnInit {\r\n  question: SecurityQuestion;\r\n  questionId: string;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private securityQuestionService: SecurityQuestionService\r\n  ) {\r\n    this.questionId = this.route.snapshot.paramMap.get(\"questionId\");\r\n\r\n    this.securityQuestionService\r\n      .findSecurityQuestionById(this.questionId)\r\n      .subscribe(\r\n        (res) => {\r\n          this.question = res[\"data\"];\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          this.form.controls.text.setValue(this.question.text);\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  saveQuestion(): void {\r\n    const updatedSecurityQuestion: SecurityQuestion = {\r\n      text: this.form.controls.text.value,\r\n    };\r\n\r\n    this.securityQuestionService\r\n      .updateSecurityQuestion(this.questionId, updatedSecurityQuestion)\r\n      .subscribe((res) => {\r\n        this.router.navigate([\"/security-questions\"]);\r\n      });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"/security-questions\"]);\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-card-title>Security Question Details</mat-card-title>\r\n\r\n        <br />\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveQuestion()\" #questionForm>\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input matInput [formControl]=\"form.controls['text']\"\r\n                        placeholder=\"Security question text...\" (keydown.enter)=\"saveQuestion()\"/>\r\n\r\n                        <mat-error class=\"error\" *ngIf=\"form.controls.text.hasError('required') && form.controls.text.touched\">\r\n                            Security question is a required field.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <br />\r\n            <mat-card-actions  align=\"end\">\r\n                <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n                <button mat-raised button [disabled]=\"!form.valid\" color=\"accent\">Submit</button>\r\n            </mat-card-actions>\r\n        </form>\r\n\r\n    </mat-card>\r\n</div>","/**\r\n * Author: Prof Richard Krasso\r\n * Modified by: Eunice Lim\r\n * Date: 17 Sep 2021\r\n * Title: delete-record-dialog.component.ts\r\n*/\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-record-dialog',\r\n  templateUrl: './delete-record-dialog.component.html',\r\n  styleUrls: ['./delete-record-dialog.component.css']\r\n})\r\nexport class DeleteRecordDialogComponent implements OnInit {\r\n  recordId: string;\r\n  dialogHeader: string;\r\n  dialogBody: string;\r\n  \r\n  /** to delete the current record via the id, header and body */\r\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\r\n    this.recordId = data.recordId;\r\n    this.dialogHeader = data.dialogHeader;\r\n    this.dialogBody = data.dialogBody; \r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- delete confirmation pop up -->\r\n<h2 mat-dialog-title>{{ dialogHeader }}</h2>\r\n\r\n<div mat-dialog-content>\r\n  <p>{{ dialogBody }}</p>\r\n  <small style=\"color: red\">WARNING: Deleted records cannot be recovered.</small>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button matDialogClose=\"cancel\">\r\n    No Thanks\r\n  </button>\r\n  <button mat-raised-button matDialogClose=\"confirm\" cdkFocusInitial>\r\n    Accept\r\n  </button>\r\n</div>","/*\r\n============================================\r\n; Title: security-question-list.component.ts\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: Security question list component TypeScript file\r\n;===========================================\r\n*/\r\n\r\n// import statements\r\nimport { DeleteRecordDialogComponent } from \"./../../shared/delete-record-dialog/delete-record-dialog.component\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\r\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\r\n\r\n@Component({\r\n  selector: \"app-security-question-list\",\r\n  templateUrl: \"./security-question-list.component.html\",\r\n  styleUrls: [\"./security-question-list.component.css\"],\r\n})\r\nexport class SecurityQuestionListComponent implements OnInit {\r\n  securityQuestions: SecurityQuestion[];\r\n  displayColumns = [\"question\", \"functions\"];\r\n\r\n  constructor(private dialog: MatDialog, private securityQuestionService: SecurityQuestionService) {\r\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\r\n      (res) => {\r\n        this.securityQuestions = res[\"data\"];\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  delete(recordId: string): void {\r\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\r\n      data: {\r\n        recordId,\r\n        dialogHeader: \"Delete Record Dialog\",\r\n        dialogBody: `Are you sure you want to delete the selected security question?`,\r\n      },\r\n      disableClose: true,\r\n      width: \"800px\",\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === \"confirm\") {\r\n        this.securityQuestionService\r\n          .deleteSecurityQuestion(recordId)\r\n          .subscribe((res) => {\r\n            console.log(\"Security question deleted\");\r\n            this.securityQuestions = this.securityQuestions.filter(\r\n              q => q._id !== recordId);\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <mat-card>\r\n        <mat-card-title>Security Questions Configuration</mat-card-title>\r\n        <mat-card-subtitle>\r\n            <button mat-button routerLink=\"/security-questions/create/new\" color=\"accent\">Create</button>\r\n        </mat-card-subtitle>\r\n\r\n        <br />\r\n        <mat-card-content *ngIf=\"securityQuestions\">\r\n            <table mat-table [dataSource]=\"securityQuestions\">\r\n                <ng-container matColumnDef=\"question\">\r\n                    <th mat-header-cell *matHeaderCellDef>Question</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.text }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"functions\">\r\n                <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button routerLink=\"/security-questions/{{element._id}}\">\r\n                    <mat-icon color=\"accent\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button (click)=\"delete(element._id)\">\r\n                        <mat-icon color=\"accent\">delete</mat-icon>\r\n                    </button>\r\n                </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","/**\r\n * Date: 18 September 2021\r\n * Title: BCRS - Security Question Create\r\n * Author: Mark Watson\r\n * Description: Security question create component.\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SecurityQuestionService } from './../../shared/security-question.service';\r\nimport { SecurityQuestion } from './../../shared/security-question.interface';\r\n\r\n@Component({\r\n  selector: 'app-security-question-create',\r\n  templateUrl: './security-question-create.component.html',\r\n  styleUrls: ['./security-question-create.component.css']\r\n})\r\n\r\nexport class SecurityQuestionCreateComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private securityQuestionService: SecurityQuestionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  // create security question from input on the form\r\n  create(): void {\r\n    const newSecurityQuestion: SecurityQuestion = {\r\n      text: this.form.controls.text.value\r\n    }\r\n\r\n    this.securityQuestionService.createSecurityQuestion(newSecurityQuestion).subscribe(res => {\r\n      this.router.navigate(['security-questions']);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // to cancel\r\n  cancel(): void {\r\n    this.router.navigate(['/security-questions']);\r\n  }\r\n}\r\n","<!--\r\n============================================\r\n; Title:  security-question-create.component.html\r\n; Author: Professor Krasso\r\n; Modified by: Adam Luna\r\n; Date: 18 September 2021\r\n; Description: HTML file for the create security question page\r\n;===========================================\r\n-->\r\n\r\n<div fxLayout=\"column\">\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-card-title>Create Security Question</mat-card-title>\r\n\r\n    <br />\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"create()\" #securityQuestionform>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n          <mat-form-field>\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              [formControl]=\"form.controls['text']\"\r\n              placeholder=\"Question text\"\r\n              (keydown.enter)=\"create()\"\r\n            />\r\n\r\n            <mat-error\r\n              *ngIf=\"\r\n                form.controls.text.hasError('required') &&\r\n                form.controls.text.touched\r\n              \"\r\n              class=\"error\"\r\n            >\r\n              Security questions is a required field.\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <br />\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          [disabled]=\"!form.valid\"\r\n          mat-raised-button\r\n          color=\"accent\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-base-layout',\r\n  templateUrl: './base-layout.component.html',\r\n  styleUrls: ['./base-layout.component.css']\r\n})\r\nexport class BaseLayoutComponent implements OnInit {\r\n\r\n  year: number = Date.now();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n\r\n  <!-- navigation -->\r\n  <nav fxFlex>\r\n    <mat-toolbar>\r\n      <!-- navbar container -->\r\n      <div class=\"navbar-container\">\r\n        <!-- logo -->\r\n        <button class=\"logo\" routerLink=\"/\" mat-button>BCRS</button>\r\n\r\n        <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\r\n        <button class=\"navbar-link\" mat-button>About</button>\r\n      </div>\r\n\r\n    </mat-toolbar>\r\n  </nav>\r\n\r\n  <!-- main content -->\r\n  <div fxFlex>\r\n    <main class=\"main-content\" fxFlex=\"100%;\">\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n  </div>\r\n\r\n  <!-- footer -->\r\n  <div fxFlex>\r\n    <footer class=\"footer\">\r\n      <mat-toolbar class=\"footer-content\">\r\n        <p>\r\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop - <a href=\"https://www.bellevue.edu/\" class=\"bu-link\" target=\"_blank\">Bellevue University</a>\r\n        </p>\r\n      </mat-toolbar>\r\n    </footer>\r\n  </div>\r\n\r\n</div>\r\n","/**\r\n * Date: 18 September 2021\r\n * Title: BCRS - App Routing\r\n * Author: Mark Watson\r\n * Description: App routing file.\r\n */\r\n\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\r\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { UserListComponent } from './pages/user-list/user-list.component';\r\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\r\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\r\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\r\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\r\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\r\nimport { AuthGuard } from './shared/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: HomeComponent\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: UserListComponent,\r\n      },\r\n      {\r\n        path: 'users/:userId',\r\n        component: UserDetailsComponent,\r\n      },\r\n      {\r\n        path: 'users/create/new',\r\n        component: UserCreateComponent,\r\n      },\r\n      {\r\n        path: 'security-questions',\r\n        component: SecurityQuestionListComponent,\r\n      },\r\n      {\r\n        path: 'security-questions/:id',\r\n        component: SecurityQuestionDetailsComponent,\r\n      },\r\n      {\r\n        path: 'security-questions/create/new',\r\n        component: SecurityQuestionCreateComponent\r\n      }\r\n    ],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'session',\r\n    component: AuthLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'signin',\r\n        component: SigninComponent,\r\n      },\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}