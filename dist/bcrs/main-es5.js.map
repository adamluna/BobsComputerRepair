{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/user-list/user-list.component.ts","webpack:///src/app/pages/user-list/user-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/user.service.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/user-create/user-create.component.ts","webpack:///src/app/pages/user-create/user-create.component.html","webpack:///src/app/pages/user-details/user-details.component.ts","webpack:///src/app/pages/user-details/user-details.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/security-question.service.ts","webpack:///src/app/pages/security-question-details/security-question-details.component.ts","webpack:///src/app/pages/security-question-details/security-question-details.component.html","webpack:///src/app/shared/delete-record-dialog/delete-record-dialog.component.ts","webpack:///src/app/shared/delete-record-dialog/delete-record-dialog.component.html","webpack:///src/app/pages/security-question-list/security-question-list.component.ts","webpack:///src/app/pages/security-question-list/security-question-list.component.html","webpack:///src/app/pages/security-question-create/security-question-create.component.ts","webpack:///src/app/pages/security-question-create/security-question-create.component.html","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","AuthLayoutComponent","UserListComponent","dialog","userService","displayedColumns","findAllUsers","subscribe","res","users","console","log","err","userId","recordId","dialogRef","open","data","dialogHeader","dialogBody","disableClose","width","afterClosed","result","deleteUser","filter","u","_id","environment","production","UserService","http","get","user","post","userName","password","firstName","lastName","phoneNumber","address","email","put","AuthGuard","router","cookieService","route","state","isAuthenticated","navigate","UserCreateComponent","fb","form","group","compose","required","pattern","newUser","controls","value","createUser","UserDetailsComponent","snapshot","paramMap","findUserById","setValue","updatedUser","updateUser","saveUser","$event","preventDefault","cancel","AppComponent","SigninComponent","set","errorMessage","error","message","signin","AppModule","SecurityQuestionService","questionId","newSecurityQuestion","text","updatedSecurityQuestion","SecurityQuestionDetailsComponent","securityQuestionService","findSecurityQuestionById","question","updateSecurityQuestion","saveQuestion","DeleteRecordDialogComponent","SecurityQuestionListComponent","displayColumns","findAllSecurityQuestions","securityQuestions","deleteSecurityQuestion","q","SecurityQuestionCreateComponent","createSecurityQuestion","create","BaseLayoutComponent","year","Date","now","routes","path","component","children","canActivate","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","relativeLinkResolution","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n============================================\n; Title:  auth-layout.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Auth layout component HTML file\n;===========================================\n-->\n<div fxLayout=\"column\">\n    <router-outlet></router-outlet>\n</div>\n","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 19 Sep 2021\n * Title: user-list.component.ts\n*/\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteRecordDialogComponent } from './../../shared/delete-record-dialog/delete-record-dialog.component';\nimport { UserService } from './../../shared/user.service';\nimport {User} from './../../shared/user.interface';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users: User [];\n  displayedColumns = ['userName', 'firstName', 'lastName', 'phoneNumber', 'address', 'email', 'functions'];\n\n  constructor (private dialog: MatDialog, private userService: UserService){\n\n      this.userService.findAllUsers().subscribe(res => {\n          this.users = res['data'];\n          console.log(this.users);\n      }, err => {\n          console.log(err);\n      });\n  }\n\n  ngOnInit(): void{\n\n  }\n\n  delete(userId, recordId): void {\n      const dialogRef = this.dialog.open(DeleteRecordDialogComponent,{\n          data: {\n              recordId,\n              dialogHeader: 'Delete Record Dialog',\n              dialogBody: `Are you sure you want to delete user ${recordId}?`\n          },\n          disableClose: true,\n          width: '800px'\n      });\n\n      dialogRef.afterClosed().subscribe(result =>{\n          if (result === 'confirm') {\n              this.userService.deleteUser(userId).subscribe(res => {\n                  console.log(`User delete`);\n                  this.users = this.users.filter(u => u._id !== userId);\n              });\n          }\n      });\n  }\n}","<div fxLayout ='column'>\n    <mat-card>\n        <mat-card-title>Users Configuration</mat-card-title>\n        <mat-card-subtitle>\n            <button mat-button routerLink=\"/users/create/new\" color =\"accent\">Create</button>\n        </mat-card-subtitle>\n\n        <mat-card-content *ngIf=\"users\">\n            <table mat-table [dataSource]= \"user\">\n                <ng-container matColumnDef=\"userName\">\n                    <th mat-header-cell *matHeaderCellDef>Username</th>\n                    <td mat-cell *matCelLDef =\"let element\">\n                        {{ element.userName }} \n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"firstName\">\n                    <th mat-header-cell *matHeaderCellDef>First Name</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.firstName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"lastName\">\n                    <th mat-header-cell *matHeaderCellDef>Last Name</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.lastName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"phoneNumber\">\n                    <th mat-header-cell *matHeaderCellDef>Phone Name</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.phoneNumber}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"address\">\n                    <th mat-header-cell *matHeaderCellDef>Address</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.address}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef>Email</th>\n                    <td mat-cell *matCellDef = \"let element\">{{element.email}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"functions\">\n                    <th mat-header-cell *matHeaderCellDef>Functions</th>\n                    <td mat-cell *matCellDef = \"let element\">\n                        <button mat-icon-button routerLink=\"/users/{{element._id}}\">\n                        <mat-icon color=\"accent\">delete</mat-icon>\n                        </button>                 \n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef = \"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-card-content>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n============================================\n; Title: user.service.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 September 2021\n; Description: User service TypeScript file\n;===========================================\n*/\n\n// import statements\nimport { Injectable } from \"@angular/core\";\nimport { User } from \"./user.interface\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  findAllUsers(): Observable<any> {\n    return this.http.get(\"/api/users\");\n  }\n\n  findUserById(userId: string): Observable<any> {\n    return this.http.get(\"/api/users/\" + userId);\n  }\n\n  createUser(user: User): Observable<any> {\n    return this.http.post(\"/api/users/\", {\n      userName: user.userName,\n      password: user.password,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      email: user.email,\n    });\n  }\n\n  updateUser(userId: string, user: User): Observable<any> {\n    return this.http.put(\"/api/users/\" + userId, {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      email: user.email,\n    });\n  }\n\n  deleteUser(userId: string): Observable<any> {\n    return this.http.delete(\"/api/users/\" + userId);\n  }\n}\n","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 17 Sep 2021\n * Title: auth.guard.ts\n*/\n\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n  export class AuthGuard implements CanActivate {\n      constructor( private router: Router, private cookieService: CookieService){}\n\n      canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n          const isAuthenticated = this.cookieService.get('sessionuser');\n\n          if (isAuthenticated) {\n              return true;\n          } else {\n              this.router.navigate(['/session/signin']);\n              return false;\n          }\n      }\n  }","/*\n============================================\n; Title: user-create.component.ts\n; Author: Adam Luna\n; Date: 19 September 2021\n; Description: User create component TypeScript file\n;===========================================\n*/\n// import statements\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"./../../shared/user.interface\";\nimport { UserService } from \"./../../shared/user.service\";\n\n@Component({\n  selector: \"app-user-create\",\n  templateUrl: \"./user-create.component.html\",\n  styleUrls: [\"./user-create.component.css\"],\n})\nexport class UserCreateComponent implements OnInit {\n  user: User;\n  userId: string;\n  form: FormGroup;\n  roles: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\n        ]),\n      ],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [\n        null,\n        Validators.compose([Validators.required, Validators.email]),\n      ],\n    });\n  }\n\n  createUser(): void {\n    const newUser: User = {\n      userName: this.form.controls.userName.value,\n      password: this.form.controls.password.value,\n      firstName: this.form.controls.firstName.value,\n      lastName: this.form.controls.lastName.value,\n      phoneNumber: this.form.controls.phoneNumber.value,\n      address: this.form.controls.address.value,\n      email: this.form.controls.address.value,\n    };\n\n    this.userService.createUser(newUser).subscribe(\n      (res) => {\n        this.router.navigate([\"/users\"]);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/users\"]);\n  }\n}\n","<p>user-create works!</p>\n","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 19 Sep 2021\n * Title: user-details.component.ts\n*/\n\n//import statements\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from './../../shared/user.service';\nimport { User } from './../../shared/user.interface';\n\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  user: User;\n  userId: string;\n  form: FormGroup;\n  roles: any;\n  constructor(private route: ActivatedRoute, private fb:FormBuilder, private router: Router,\n    private userService: UserService){\n        this.userId = this.route.snapshot.paramMap.get('userId');\n\n        this.userService.findUserById(this.userId).subscribe(res =>{\n            this.user = res['data'];\n        }, err => {\n            console.log(err);\n        }, () => {\n            this.form.controls.firstName.setValue(this.user.firstName);\n            this.form.controls.lastName.setValue(this.user.lastName);\n            this.form.controls.phoneNumber.setValue(this.user.phoneNumber);\n            this.form.controls.address.setValue(this.user.address);\n            this.form.controls.email.setValue(this.user.email);\n        });\n    }\n\n    //ensure field is filled in\n    ngOnInit(): void{\n        this.form = this.fb.group({\n            firstName: [null, Validators.compose([Validators.required])],\n            lastName: [null, Validators.compose([Validators.required])],\n            phoneNumber: [null, Validators.compose([Validators.required])],\n            address: [null, Validators.compose([Validators.required])],\n            email: [null, Validators.compose([Validators.required])],\n        });\n    }\n\n    //updates form values\n    saveUser(): void{\n        const updatedUser: User ={\n            firstName: this.form.controls.firstName.value,\n            lastName: this.form.controls.lastName.value,\n            phoneNumber: this.form.controls.phoneNumber.value,\n            address: this.form.controls.address.value,\n            email: this.form.controls.email.value\n        };\n\n        this.userService.updateUser(this.userId, updatedUser).subscribe(res => {\n            this.router.navigate(['/users']);\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    //cancel option. brings user back to user page\n    cancel(): void{\n        this.router.navigate(['/users']);\n    }\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>User Details</mat-card-title>\n\n        <br/>\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveUser()\" #userForm (keydown.enter)= \"$event.preventDefault()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\"\n                        placeholder=\"First name\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.firstName.hasError('required') && form.controls.firstName.touched\">\n                            First name is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\"\n                        placeholder=\"Last name\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.lastName.hasError('required') && form.controls.lastName.touched\">\n                            Last name is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\"\n                        placeholder=\"Phone number\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.phoneNumber.hasError('required') && form.controls.phoneNumber.touched\">\n                            Phone number is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['address']\"\n                        placeholder=\"Address\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.address.hasError('required') && form.controls.address.touched\">\n                            Address is a required field.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"text\" matInput [formControl]=\"form.controls['email']\"\n                        placeholder=\"Email\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('required') && form.controls.email.touched\">\n                            Email is a required field.\n                        </mat-error>\n                        <mat-error class=\"error\" *ngIf=\"form.controls.email.hasError('email') && form.controls.email.touched\">\n                            Invalid email format.\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                </mat-card-content>\n\n                <br/>\n\n                <mat-card-actions align=\"end\">\n                    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\n                    <button mat-raised-button [disabled]=\"!form.valid\" color = \"accent\">Submit</button>\n                </mat-card-actions>\n        </form>\n    </mat-card>\n</div>\n                ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/*\n============================================\n; Title: signin-component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Signin component TypeScript file\n;===========================================\n*/\n// import statements\nimport { Component, OnInit, ɵɵsetComponentScope } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-signin\",\n  templateUrl: \"./signin.component.html\",\n  styleUrls: [\"./signin.component.css\"],\n})\nexport class SigninComponent implements OnInit {\n  form: FormGroup;\n  errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private cookieService: CookieService,\n    private fb: FormBuilder,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"),\n        ]),\n      ],\n    });\n  }\n\n  signin(): void {\n    const userName = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    this.http\n      .post(\"/api/session/signin\", {\n        userName,\n        password,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res[\"data\"]);\n          if (res[\"data\"].userName) {\n            /**\n             * User is authenticated and we can grant them access\n             */\n            this.cookieService.set(\"sessioniser\", res[\"data\"].userName, 1);\n            this.router.navigate([\"/\"]);\n          }\n        },\n        (err) => {\n          console.log(err);\n          this.errorMessage = err.error.message;\n        }\n      );\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row>\n        <div style=\"width: 90%;\">\n            <p style=\"text-align: center; padding-left: 10%; font-weight: lighter;\">\n            Bob's Computer Repair Shop <br />\n            <mat-icon>build</mat-icon>\n            </p>\n        </div>\n    </mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n    <mat-toolbar-row></mat-toolbar-row>\n</mat-toolbar>\n    \n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\n    <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\n        <mat-card class=\"mat-card-top pa-0\">\n            <mat-card-title style=\"text-align: center; font-size: 48px; font-weight: lighter;\"\n                    class=\"mat-headline\">Employee Sign In\n            </mat-card-title>\n\n            <br />\n\n            <mat-card-subtitle style=\"text-align: center; font-weight: lighter;\">\n                <a routerLink=\"/\" class=\"register-link\">or create and account</a>\n            </mat-card-subtitle>\n\n            <br />\n\n            <mat-card-subtitle style=\"text-align: center;\" class=\"mat-headline\">\n                You must enter a valid username/password to proceed\n            </mat-card-subtitle>\n\n            <mat-card-content>\n                <!-- for any error message-->\n                <small style=\"color: #c51d36;\" *ngIf=\"errorMessage\">{{ errorMessage }}<br/></small>\n                <mat-card class=\"mat-elevation-z0\">\n                    <form [formGroup]=\"form\" (ngSubmit)=\"signin(); form.reset()\" #loginForm=\"ngForm\">\n                        <mat-card-content fxLayout=\"column\" fxLayoutGap=\"10px\">\n                            <mat-form-field>\n                                <input type=\"text\" matInput fxFlex [formControl]=\"form.controls['userName']\"\n                                    placeholder=\"User Name\"/>\n\n                                    <mat-error class=\"error\" *ngIf=\"form.controls.userName.hasError('required') && form.controls.userName.touched\">\n                                        Username is a required field.\n                                    </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <input type=\"password\" matInput fxFlex [formControl]=\"form.controls['password']\"\n                                    placeholder=\"Password\"/>\n                                <!--error prompts at the form fill-->\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('required') && form.controls.password.touched\">\n                                    Password is a required field.\n                                </mat-error>\n\n                                <mat-error class=\"error\" *ngIf=\"form.controls.password.hasError('pattern') && form.controls.password.touched\">\n                                    Password must be at least 8 characters, contain one letter, and one number.\n                                </mat-error>\n\n                            </mat-form-field>\n                        </mat-card-content>\n\n                        <mat-card-actions>\n                            <button type=\"submit\" [disabled]=\"!form.valid\" fxFlex mat-raised-button color=\"accent\">Submit</button>\n                        </mat-card-actions>\n                        <br/>\n                        <a fxLayoutAlign=\"end\" class=\"forgot-password-link\" routerLink=\"/\">Forgot password?</a>\n                    </form>\n                </mat-card>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","/**\n * Author: Prof. Richard Krasso\n * Modified By: Eunice Lim, Adam Luna, Mark Watson\n * Date: 18 Sept 2021\n * Title: app.module.ts\n */\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeleteRecordDialogComponent } from './shared/delete-record-dialog/delete-record-dialog.component';\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { UserListComponent } from './pages/user-list/user-list.component';\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    DeleteRecordDialogComponent,\n    SecurityQuestionDetailsComponent,\n    SecurityQuestionListComponent,\n    SigninComponent,\n    UserListComponent,\n    SecurityQuestionCreateComponent,\n    UserCreateComponent,\n    UserDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * Date: 18 September 2021\n * Title: BCRS - Security Question Service\n * Author: Mark Watson\n * Description: Security question service file.\n */\n\nimport { Injectable } from '@angular/core';\nimport { SecurityQuestion } from './security-question.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n\n  constructor(private http: HttpClient) { }\n\n  // findAll\n  findAllSecurityQuestions(): Observable<any> {\n    return this.http.get('/api/security-questions');\n  }\n\n  // findById\n  findSecurityQuestionById(questionId: string): Observable<any> {\n    return this.http.get('/api/security-questions/' + questionId);\n  }\n\n  // create\n  createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\n    return this.http.post('/api/security-questions', {\n      text: newSecurityQuestion.text\n    })\n  }\n\n  // update\n  updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\n    return this.http.put('/api/security-questions/'+ questionId, {\n      text: updatedSecurityQuestion.text\n    })\n  }\n\n  // delete\n  deleteSecurityQuestion(questionId: string): Observable<any> {\n    return this.http.delete('/api/security-questions/'+ questionId);\n  }\n}\n","/*\n============================================\n; Title: security-question-details.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Security question details component TypeScript file\n;===========================================\n*/\n\n// import statements\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\n\n@Component({\n  selector: \"app-security-question-details\",\n  templateUrl: \"./security-question-details.component.html\",\n  styleUrls: [\"./security-question-details.component.css\"],\n})\nexport class SecurityQuestionDetailsComponent implements OnInit {\n  question: SecurityQuestion;\n  questionId: string;\n  form: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private router: Router,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    this.questionId = this.route.snapshot.paramMap.get(\"questionId\");\n\n    this.securityQuestionService\n      .findSecurityQuestionById(this.questionId)\n      .subscribe(\n        (res) => {\n          this.question = res[\"data\"];\n        },\n        (err) => {\n          console.log(err);\n        },\n        () => {\n          this.form.controls.text.setValue(this.question.text);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      text: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  saveQuestion(): void {\n    const updatedSecurityQuestion: SecurityQuestion = {\n      text: this.form.controls.text.value,\n    };\n\n    this.securityQuestionService\n      .updateSecurityQuestion(this.questionId, updatedSecurityQuestion)\n      .subscribe((res) => {\n        this.router.navigate([\"/security-questions\"]);\n      });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/security-questions\"]);\n  }\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Security Question Details</mat-card-title>\n\n        <br />\n\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveQuestion()\" #questionForm>\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input matInput [formControl]=\"form.controls['text']\"\n                        placeholder=\"Security question text...\" (keydown.enter)=\"saveQuestion()\"/>\n\n                        <mat-error class=\"error\" *ngIf=\"form.controls.text.hasError('required') && form.controls.text.touched\">\n                            Security question is a required field.\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n\n            <br />\n            <mat-card-actions  align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\n                <button mat-raised button [disabled]=\"!form.valid\" color=\"accent\">Submit</button>\n            </mat-card-actions>\n        </form>\n\n    </mat-card>\n</div>","/**\n * Author: Prof Richard Krasso\n * Modified by: Eunice Lim\n * Date: 17 Sep 2021\n * Title: delete-record-dialog.component.ts\n*/\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog',\n  templateUrl: './delete-record-dialog.component.html',\n  styleUrls: ['./delete-record-dialog.component.css']\n})\nexport class DeleteRecordDialogComponent implements OnInit {\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  \n  /** to delete the current record via the id, header and body */\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\n    this.recordId = data.recordId;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody; \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- delete confirmation pop up -->\n<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p>{{ dialogBody }}</p>\n  <small style=\"color: red\">WARNING: Deleted records cannot be recovered.</small>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button matDialogClose=\"cancel\">\n    No Thanks\n  </button>\n  <button mat-raised-button matDialogClose=\"confirm\" cdkFocusInitial>\n    Accept\n  </button>\n</div>","/*\n============================================\n; Title: security-question-list.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: Security question list component TypeScript file\n;===========================================\n*/\n\n// import statements\nimport { DeleteRecordDialogComponent } from \"./../../shared/delete-record-dialog/delete-record-dialog.component\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SecurityQuestionService } from \"./../../shared/security-question.service\";\nimport { SecurityQuestion } from \"./../../shared/security-question.interface\";\n\n@Component({\n  selector: \"app-security-question-list\",\n  templateUrl: \"./security-question-list.component.html\",\n  styleUrls: [\"./security-question-list.component.css\"],\n})\nexport class SecurityQuestionListComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  displayColumns = [\"question\", \"functions\"];\n\n  constructor(private dialog: MatDialog, private securityQuestionService: SecurityQuestionService) {\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  delete(recordId: string): void {\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\n      data: {\n        recordId,\n        dialogHeader: \"Delete Record Dialog\",\n        dialogBody: `Are you sure you want to delete the selected security question?`,\n      },\n      disableClose: true,\n      width: \"800px\",\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === \"confirm\") {\n        this.securityQuestionService\n          .deleteSecurityQuestion(recordId)\n          .subscribe((res) => {\n            console.log(\"Security question deleted\");\n            this.securityQuestions = this.securityQuestions.filter(\n              q => q._id !== recordId);\n          });\n      }\n    });\n  }\n}\n","<div fxLayout=\"column\">\n    <mat-card>\n        <mat-card-title>Security Questions Configuration</mat-card-title>\n        <mat-card-subtitle>\n            <button mat-button routerLink=\"/security-questions/create/new\" color=\"accent\">Create</button>\n        </mat-card-subtitle>\n\n        <br />\n        <mat-card-content *ngIf=\"securityQuestions\">\n            <table mat-table [dataSource]=\"securityQuestions\">\n                <ng-container matColumnDef=\"question\">\n                    <th mat-header-cell *matHeaderCellDef>Question</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        {{ element.text }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"functions\">\n                <th mat-header-cell *matHeaderCellDef>Functions</th>\n\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button routerLink=\"/security-questions/{{element._id}}\">\n                    <mat-icon color=\"accent\">edit</mat-icon>\n                    </button>\n                    <button mat-icon-button (click)=\"delete(element._id)\">\n                        <mat-icon color=\"accent\">delete</mat-icon>\n                    </button>\n                </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-card-content>\n    </mat-card>\n</div>","/**\n * Date: 18 September 2021\n * Title: BCRS - Security Question Create\n * Author: Mark Watson\n * Description: Security question create component.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SecurityQuestionService } from './../../shared/security-question.service';\nimport { SecurityQuestion } from './../../shared/security-question.interface';\n\n@Component({\n  selector: 'app-security-question-create',\n  templateUrl: './security-question-create.component.html',\n  styleUrls: ['./security-question-create.component.css']\n})\n\nexport class SecurityQuestionCreateComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router, private securityQuestionService: SecurityQuestionService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      text: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  // create security question from input on the form\n  create(): void {\n    const newSecurityQuestion: SecurityQuestion = {\n      text: this.form.controls.text.value\n    }\n\n    this.securityQuestionService.createSecurityQuestion(newSecurityQuestion).subscribe(res => {\n      this.router.navigate(['security-questions']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  // to cancel\n  cancel(): void {\n    this.router.navigate(['/security-questions']);\n  }\n}\n","<!--\n============================================\n; Title:  security-question-create.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 18 September 2021\n; Description: HTML file for the create security question page\n;===========================================\n-->\n\n<div fxLayout=\"column\">\n  <mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create Security Question</mat-card-title>\n\n    <br />\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"create()\" #securityQuestionform>\n      <mat-card-content>\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n          <mat-form-field>\n            <input\n              type=\"text\"\n              matInput\n              [formControl]=\"form.controls['text']\"\n              placeholder=\"Question text\"\n              (keydown.enter)=\"create()\"\n            />\n\n            <mat-error\n              *ngIf=\"\n                form.controls.text.hasError('required') &&\n                form.controls.text.touched\n              \"\n              class=\"error\"\n            >\n              Security questions is a required field.\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n\n      <br />\n      <mat-card-actions align=\"end\">\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          [disabled]=\"!form.valid\"\n          mat-raised-button\n          color=\"accent\"\n        >\n          Submit\n        </button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n\n  <!-- navigation -->\n  <nav fxFlex>\n    <mat-toolbar>\n      <!-- navbar container -->\n      <div class=\"navbar-container\">\n        <!-- logo -->\n        <button class=\"logo\" routerLink=\"/\" mat-button>BCRS</button>\n\n        <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\n        <button class=\"navbar-link\" mat-button>About</button>\n      </div>\n\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n\n  <!-- footer -->\n  <div fxFlex>\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop - <a href=\"https://www.bellevue.edu/\" class=\"bu-link\" target=\"_blank\">Bellevue University</a>\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n\n</div>\n","/**\n * Date: 18 September 2021\n * Title: BCRS - App Routing\n * Author: Mark Watson\n * Description: App routing file.\n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { UserListComponent } from './pages/user-list/user-list.component';\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\nimport { AuthGuard } from './shared/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'users',\n        component: UserListComponent,\n      },\n      {\n        path: 'users/:userId',\n        component: UserDetailsComponent,\n      },\n      {\n        path: 'users/create/new',\n        component: UserCreateComponent,\n      },\n      {\n        path: 'security-questions',\n        component: SecurityQuestionListComponent,\n      },\n      {\n        path: 'security-questions/:id',\n        component: SecurityQuestionDetailsComponent,\n      },\n      {\n        path: 'security-questions/create/new',\n        component: SecurityQuestionCreateComponent\n      }\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent,\n      },\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}